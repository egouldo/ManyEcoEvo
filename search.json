[{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement elliot.gould@unimelb.edu.au. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/articles/data_cleaning_preparation.html","id":"data-cleaning","dir":"Articles","previous_headings":"","what":"Data Cleaning","title":"Data Cleaning & Preparation for Analysis","text":"Analysts may report estimates various scales, example may report values link response scales, may also …. order proceed effect size standardisation standardisation, transformations back-transformations need applied. Anonymising submissions - anonymise_teams() / anonymise_id_col() clean_response_transformation() Depends scale values reported (link / response), transformation applied response variable, predictor variable.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/articles/data_cleaning_preparation.html","id":"data-preprocessing","dir":"Articles","previous_headings":"","what":"Data Preprocessing","title":"Data Cleaning & Preparation for Analysis","text":"distinction processing cleaning?","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/articles/data_cleaning_preparation.html","id":"back-transforming-response-variables","dir":"Articles","previous_headings":"Data Preprocessing","what":"Back-transforming response variables","title":"Data Cleaning & Preparation for Analysis","text":"meta-analysis units need standardized analysts use different response / outcome variables, may need ensure talking units correct scale can standardize.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/articles/data_cleaning_preparation.html","id":"standardising-effect-sizes","dir":"Articles","previous_headings":"Data Preprocessing","what":"Standardising effect sizes","title":"Data Cleaning & Preparation for Analysis","text":"pred_to_Z() (data frame level), Z_VZ_preds() est_to_Zr()","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/articles/data_cleaning_preparation.html","id":"calculating-sorensen-similarity-index","dir":"Articles","previous_headings":"Data Preprocessing","what":"Calculating Sorensen similarity index","title":"Data Cleaning & Preparation for Analysis","text":"apply_sorensen_calc() calculate_sorensen_diversity_index() (also needs renamed)","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/articles/multiple_datasets.html","id":"a-tidy-approach-with-list-columns-and-nested-dataframes","dir":"Articles","previous_headings":"","what":"A tidy approach with list-columns and nested dataframes","title":"Scaling Up: working with multiple subsets or multiple datasets","text":"list-columns tidy modelling approach.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/articles/multiple_datasets.html","id":"working-with-multiple-datasets","dir":"Articles","previous_headings":"A tidy approach with list-columns and nested dataframes","what":"Working with Multiple datasets","title":"Scaling Up: working with multiple subsets or multiple datasets","text":"Multiple different datasets might want replicate analyses compare. E.g. Blue tit vs. Eucalyptus. Demonstrate approach analysis pipeline ManyEcoEvo just using blue tit Eucalyptus data -> make_viz() etc.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/articles/multiple_datasets.html","id":"creating-data-subsets-based-on-various-exclusion-principles","dir":"Articles","previous_headings":"A tidy approach with list-columns and nested dataframes","what":"Creating data subsets based on various exclusion principles","title":"Scaling Up: working with multiple subsets or multiple datasets","text":"Generate different subsets: - generate_exclusion_subsets() - generate_expertise_subsets() - generate_outlier_subsets() - generate_rating_subsets() - generate_yi_subsets()","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Elliot Gould. Author, maintainer. Hannah S. Fraser. Author. Shinichi Nakagawa. Author. Timothy H. Parker. Author.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gould E, Fraser H, Nakagawa S, Parker T (2023). “ManyEcoEvo: Meta-analyse data ManyAnalyst style studies.” TBC.","code":"@Article{,   title = {ManyEcoEvo: Meta-analyse data from ManyAnalyst style studies},   author = {Elliot Gould and Hannah S. Fraser and Shinichi Nakagawa and Timothy H. Parker},   journal = {TBC},   year = {2023}, }"},{"path":"https://egouldo.github.io/ManyEcoEvo/index.html","id":"manyecoevo-","dir":"","previous_headings":"","what":"Meta-analyse data from Many-Analysts style studies","title":"Meta-analyse data from Many-Analysts style studies","text":"ManyEcoEvo package provides suite functions : Summarising, analysing visualising ManyEcoEvo dataset Gould et al.1 Tidying cleaning many-analyst style data analysis Reproducing analysis Gould et al. using many-analyst style data Note manuscript source-code Gould et al. located separate repository https://github.com/egouldo/ManyAnalysts, can viewed https://egouldo.github.io/ManyAnalysts/.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Meta-analyse data from Many-Analysts style studies","text":"ManyEcoEvo:: can installed using devtools:: GitHub :","code":"devtools::install_github(\"egouldo/ManyEcoEvo\")"},{"path":"https://egouldo.github.io/ManyEcoEvo/index.html","id":"regenerating-the-manyecoevo-dataset","dir":"","previous_headings":"","what":"Regenerating the ManyEcoEvo dataset","title":"Meta-analyse data from Many-Analysts style studies","text":"data processing analysis can freely reproduced help targets:: package. Please see documentation https://docs.ropensci.org/targets/ detail. wish completely reproduce dataset generation analysis Gould et al., complete following steps: Clone download https://github.com/egouldo/repository Run renv::restore() load packages used analysis pipeline locally machine (see [renv::]https://rstudio.github.io/renv/index.html) details) Run tar_destroy() remove record caches existing targets Run targets::tar_make() console, depending power machine, analysis pipeline take 2 7 minutes execute (plus minus !) can view table targets pipeline running targets::tar_meta() interact objects ‘targets’ within analysis pipeline, call targest::tar_load() targets::tar_read():","code":"targets::tar_read(\"ManyEcoEvo\") # A tibble: 2 × 4   dataset    data                diversity_data      estimate_type   <chr>      <list>              <named list>        <chr>         1 blue tit   <tibble [174 × 38]> <tibble [174 × 54]> Zr            2 eucalyptus <tibble [128 × 38]> <tibble [128 × 61]> Zr"},{"path":"https://egouldo.github.io/ManyEcoEvo/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Meta-analyse data from Many-Analysts style studies","text":"software licensed GNU GPL 3 license.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Meta-analyse data from Many-Analysts style studies","text":"package released Contributor Code Conduct.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Meta-analyse data from Many-Analysts style studies","text":"","code":"To cite package ‘ManyEcoEvo’ in publications use:    Gould E, Fraser H, Nakagawa S, Parker T (2023). _ManyEcoEvo: Meta-analyse   data from 'Many-Analysts' style studies_. R package version 1.0.0,   <https://github.com/egouldo/ManyEcoEvo>.  A BibTeX entry for LaTeX users is    @Manual{,     title = {ManyEcoEvo: Meta-analyse data from 'Many-Analysts' style studies},     author = {Elliot Gould and Hannah S. Fraser and Shinichi Nakagawa and Timothy H. Parker},     year = {2023},     note = {R package version 1.0.0},     url = {https://github.com/egouldo/ManyEcoEvo},   }"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/NotIn.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Value Matching — %in%","title":"Negative Value Matching — %in%","text":"See base:: details. %nin% binary operator, returning logical vector indicating negative match .","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/NotIn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Value Matching — %in%","text":"","code":"lhs %in% rhs"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/NotIn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Value Matching — %in%","text":"lhs vector NULL: values matched. Long vectors supported. rhs vector NULL: values matched. Long vectors supported.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/NotIn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Value Matching — %in%","text":"logical vector indicating value lhs matched rhs","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/Z_VZ_preds.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Z and VZ of out-of-sample predictions — Z_VZ_preds","title":"Calculate Z and VZ of out-of-sample predictions — Z_VZ_preds","text":"Calculate Z VZ --sample predictions","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/Z_VZ_preds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Z and VZ of out-of-sample predictions — Z_VZ_preds","text":"","code":"Z_VZ_preds(yi, yi_se, mu_p, sd_p)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/Z_VZ_preds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Z and VZ of out-of-sample predictions — Z_VZ_preds","text":"yi point-estimate prediction, response scale yi_se standard error yi mu_p Population mean variable estimated yi sd_p Population standard deviation variable estimated yi","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/Z_VZ_preds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Z and VZ of out-of-sample predictions — Z_VZ_preds","text":"tibble columns Z VZ","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/anonymise_teams.html","id":null,"dir":"Reference","previous_headings":"","what":"Anonymise ManyEcoEvo Data — anonymise_teams","title":"Anonymise ManyEcoEvo Data — anonymise_teams","text":"Anonymise ManyEcoEvo Data","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/anonymise_teams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anonymise ManyEcoEvo Data — anonymise_teams","text":"","code":"anonymise_teams(df, lookup)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/anonymise_teams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anonymise ManyEcoEvo Data — anonymise_teams","text":"df dataframe containing column id_col lookup dataframe containing columns TeamIdentifier New_Identifier","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/anonymise_teams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anonymise ManyEcoEvo Data — anonymise_teams","text":"df anonymised values id_col based New_Identifier colum lookup","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/apply_VZ_exclusions.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply VZ exclusion to a data-frame containing list-columns of yi subsets — apply_VZ_exclusions","title":"Apply VZ exclusion to a data-frame containing list-columns of yi subsets — apply_VZ_exclusions","text":"Apply VZ exclusion data-frame containing list-columns yi subsets","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/apply_VZ_exclusions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply VZ exclusion to a data-frame containing list-columns of yi subsets — apply_VZ_exclusions","text":"","code":"apply_VZ_exclusions(df = data.frame(), VZ_cutoff = numeric(1L))"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/apply_VZ_exclusions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply VZ exclusion to a data-frame containing list-columns of yi subsets — apply_VZ_exclusions","text":"df dataframe yi data subsets generated generate_yi_subsets\\(\\). VZ_cutoff numeric vector length 1, values equal greater value VZ filtered dataframes stored df's list-column data.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/apply_VZ_exclusions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply VZ exclusion to a data-frame containing list-columns of yi subsets — apply_VZ_exclusions","text":"dataframe yi subsets, whose extreme values VZ removed.","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/apply_sorensen_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies the sorensen diversity index calculation to variable diversity dataset — apply_sorensen_calc","title":"Applies the sorensen diversity index calculation to variable diversity dataset — apply_sorensen_calc","text":"Applies sorensen diversity index calculation variable diversity dataset","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/apply_sorensen_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies the sorensen diversity index calculation to variable diversity dataset — apply_sorensen_calc","text":"","code":"apply_sorensen_calc(.data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/apply_sorensen_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies the sorensen diversity index calculation to variable diversity dataset — apply_sorensen_calc","text":".data variable diversity dataset columns unique variable used analyses. Values NA analysis use variable, take value variable character string analysis use variable. unique analysis row.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/apply_sorensen_calc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies the sorensen diversity index calculation to variable diversity dataset — apply_sorensen_calc","text":"tibble containing variables id_col, mean_diversity_index num_variables","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/apportion_heterogeneity_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Apportion heterogeneity of a multi-level meta-analytic model — apportion_heterogeneity_ml","title":"Apportion heterogeneity of a multi-level meta-analytic model — apportion_heterogeneity_ml","text":"Estimates much total variance $^2$ can attributed - within- cluster heterogeneity separately.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/apportion_heterogeneity_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apportion heterogeneity of a multi-level meta-analytic model — apportion_heterogeneity_ml","text":"","code":"apportion_heterogeneity_ml(fitted_model)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/apportion_heterogeneity_ml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apportion heterogeneity of a multi-level meta-analytic model — apportion_heterogeneity_ml","text":"fitted_model","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/apportion_heterogeneity_ml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apportion heterogeneity of a multi-level meta-analytic model — apportion_heterogeneity_ml","text":"named numeric vector length 2.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/apportion_heterogeneity_ml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apportion heterogeneity of a multi-level meta-analytic model — apportion_heterogeneity_ml","text":"http://www.metafor-project.org/doku.php/tips:i2_multilevel_multivariate","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/assign_transformation_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign back-transformation type to be applied to analysis point-estimates — assign_transformation_type","title":"Assign back-transformation type to be applied to analysis point-estimates — assign_transformation_type","text":"Assign back-transformation type applied analysis point-estimates","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/assign_transformation_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign back-transformation type to be applied to analysis point-estimates — assign_transformation_type","text":"","code":"assign_transformation_type(   response_transformation = character(1L),   link_fun = character(1L) )"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/assign_transformation_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign back-transformation type to be applied to analysis point-estimates — assign_transformation_type","text":"response_transformation Character vector length 1L containing analysis response transformation link_fun Character vector length 1L containing analysis link function","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/assign_transformation_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign back-transformation type to be applied to analysis point-estimates — assign_transformation_type","text":"character vector length 1L","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/augment_prediction_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment analyst out-of-sample prediction data according to the outcome of pointblank interrogation — augment_prediction_data","title":"Augment analyst out-of-sample prediction data according to the outcome of pointblank interrogation — augment_prediction_data","text":"augment_prediction_data() relabel remove extraneous columns --sample prediction data.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/augment_prediction_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment analyst out-of-sample prediction data according to the outcome of pointblank interrogation — augment_prediction_data","text":"","code":"augment_prediction_data(.data, checks, dataset)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/augment_prediction_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment analyst out-of-sample prediction data according to the outcome of pointblank interrogation — augment_prediction_data","text":".data data.frame -sample-predictions analyst submission data checks data.frame pointblank interrogation output .data dataset character string equal either \"blue tit\" \"eucalyptus\"","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/augment_prediction_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment analyst out-of-sample prediction data according to the outcome of pointblank interrogation — augment_prediction_data","text":"dataframe. Individual analyst submission containing augmented --sample prediction data ready meta-analysis.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/augment_prediction_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augment analyst out-of-sample prediction data according to the outcome of pointblank interrogation — augment_prediction_data","text":"missing variables .data checks missing, NA returned augmented prediction data instead.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/augment_prediction_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment analyst out-of-sample prediction data according to the outcome of pointblank interrogation — augment_prediction_data","text":"","code":"# for testing and dev purposes: # safe_augment <- purrr:::safely(augment_prediction_data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/back_transform_response_vars_yi.html","id":null,"dir":"Reference","previous_headings":"","what":"Back Transform Response Variables - yi — back_transform_response_vars_yi","title":"Back Transform Response Variables - yi — back_transform_response_vars_yi","text":"Back Transform Response Variables - yi","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/back_transform_response_vars_yi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back Transform Response Variables - yi — back_transform_response_vars_yi","text":"","code":"back_transform_response_vars_yi(   dat,   estimate_type = character(1L),   param_table = NULL,   dataset = character(1L) )"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/back_transform_response_vars_yi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back Transform Response Variables - yi — back_transform_response_vars_yi","text":"estimate_type type estimate standardised. Character vector length 1, whose value may  \"yi\", \"y25\", \"y50\", \"y75\". param_table table estimated 'population' parameters variable analysis datasets. dataset One either \"blue tit\" \"eucalyptus\" data","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/back_transform_response_vars_yi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back Transform Response Variables - yi — back_transform_response_vars_yi","text":"tibble analyst data standardised values contained list-column called 'back_transformed_data'","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/box_cox_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Box-cox transform absolute deviation from the meta-analytic mean scores — box_cox_transform","title":"Box-cox transform absolute deviation from the meta-analytic mean scores — box_cox_transform","text":"Box-cox transform absolute deviation meta-analytic mean scores","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/box_cox_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Box-cox transform absolute deviation from the meta-analytic mean scores — box_cox_transform","text":"","code":"box_cox_transform(data, dataset)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/box_cox_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Box-cox transform absolute deviation from the meta-analytic mean scores — box_cox_transform","text":"data Dataset model fitting, must contain columns \"abs_deviation_score_estimate\" standard error dataset character string either \"blue tit\" \"eucalyptus\"","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/box_cox_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Box-cox transform absolute deviation from the meta-analytic mean scores — box_cox_transform","text":"data additional columns box-cox transformed deviation scores variance","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/calc_I2_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate I2 for a multilevel meta-analytic model — calc_I2_ml","title":"Calculate I2 for a multilevel meta-analytic model — calc_I2_ml","text":"Calculate I2 multilevel meta-analytic model","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/calc_I2_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate I2 for a multilevel meta-analytic model — calc_I2_ml","text":"","code":"calc_I2_ml(fitted_model)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/calc_I2_ml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate I2 for a multilevel meta-analytic model — calc_I2_ml","text":"fitted_model class rma.mv","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/calc_I2_ml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate I2 for a multilevel meta-analytic model — calc_I2_ml","text":"numeric vector length 1.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/calc_I2_ml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate I2 for a multilevel meta-analytic model — calc_I2_ml","text":"http://www.metafor-project.org/doku.php/tips:i2_multilevel_multivariate described Nakagawa & Santos, 2012.","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/calculate_deviation_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate deviation from meta-analytic mean — calculate_deviation_score","title":"Calculate deviation from meta-analytic mean — calculate_deviation_score","text":"Calculate absolute deviation standardised effect size meta-analytic mean","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/calculate_deviation_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate deviation from meta-analytic mean — calculate_deviation_score","text":"","code":"calculate_deviation_score(data, meta_analytic_model)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/calculate_deviation_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate deviation from meta-analytic mean — calculate_deviation_score","text":"data Dataset containing column \"Z\" \\(standardised sample prediction piont estimates\\) standardised effect-sizes, \"Zr\". meta_analytic_model Fitted meta-analytic model class rma","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/calculate_deviation_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate deviation from meta-analytic mean — calculate_deviation_score","text":"data additional column deviation score estimates \"abs_deviation_score_estimate\"","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/calculate_deviation_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate deviation from meta-analytic mean — calculate_deviation_score","text":"","code":"# Example Usage: TODO - this is incorrect bc box-cox transformation is included in meta_analyse_datasets_wrapper # library(tidyverse); library(targets) # tar_load(meta_analysis_outputs) # calculate_deviation_score(meta_analysis_outputs$data[[1]], #                           meta_analysis_outputs$MA_mod[[1]])"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/calculate_sorensen_diversity_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mean sorensen diversity index values for an analyst dataset — calculate_sorensen_diversity_index","title":"Calculate mean sorensen diversity index values for an analyst dataset — calculate_sorensen_diversity_index","text":"Calculate mean sorensen diversity index values analyst dataset","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/calculate_sorensen_diversity_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mean sorensen diversity index values for an analyst dataset — calculate_sorensen_diversity_index","text":"","code":"calculate_sorensen_diversity_index(.data, .id = character())"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/calculate_sorensen_diversity_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mean sorensen diversity index values for an analyst dataset — calculate_sorensen_diversity_index","text":".data variable diversity dataset columns unique variable used analyses. Values NA analysis use variable, take value variable character string analysis use variable. unique analysis row. .id character string analysis identifier column","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/calculate_sorensen_diversity_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate mean sorensen diversity index values for an analyst dataset — calculate_sorensen_diversity_index","text":"tibble containing variables id_col, mean_diversity_index num_variables","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/capwords.html","id":null,"dir":"Reference","previous_headings":"","what":"Capitalise Words — capwords","title":"Capitalise Words — capwords","text":"Capitalise Words","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/capwords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capitalise Words — capwords","text":"","code":"capwords(s, strict = FALSE)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/capwords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capitalise Words — capwords","text":"s character string containing words captalised strict whether capitalise words ","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/capwords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capitalise Words — capwords","text":"character string whose words now capitalised","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/capwords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capitalise Words — capwords","text":"","code":"capwords(\"bah, bah, black sheep\") #> [1] \"Bah, Bah, Black Sheep\""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/clean_response_transformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean response transformation variable — clean_response_transformation","title":"Clean response transformation variable — clean_response_transformation","text":"Cleans response transformation variable names back-transformation functions","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/clean_response_transformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean response transformation variable — clean_response_transformation","text":"","code":"clean_response_transformation(response_transformation)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/clean_response_transformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean response transformation variable — clean_response_transformation","text":"response_transformation character vector ","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/clean_response_transformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean response transformation variable — clean_response_transformation","text":"character vector cleaned response transformation values equal required transformation values conversion()","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/compare_ml_MA.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two fitted multi-level models — compare_ml_MA","title":"Compare two fitted multi-level models — compare_ml_MA","text":"Compares two fitted multi-level models tidies results","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/compare_ml_MA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two fitted multi-level models — compare_ml_MA","text":"","code":"compare_ml_MA(object1, object2)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/compare_ml_MA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two fitted multi-level models — compare_ml_MA","text":"object1 fitted model class mra.mv object2 Another fitted model class mra.mv","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/compare_ml_MA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two fitted multi-level models — compare_ml_MA","text":"tibble descriptive statistics model fit","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/compute_MA_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute meta-analysis inputs for a nested-dataframe containing different datasets/subsets of analyst data — compute_MA_inputs","title":"Compute meta-analysis inputs for a nested-dataframe containing different datasets/subsets of analyst data — compute_MA_inputs","text":"Computes sorensen diversity indices joins prepared data preparation meta-analysing subsets data meta_analyse_datasets().","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/compute_MA_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute meta-analysis inputs for a nested-dataframe containing different datasets/subsets of analyst data — compute_MA_inputs","text":"","code":"compute_MA_inputs(ManyEcoEvo, estimate_type = NULL)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/compute_MA_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute meta-analysis inputs for a nested-dataframe containing different datasets/subsets of analyst data — compute_MA_inputs","text":"ManyEcoEvo dataframe grouped character columns dataset, estimate_type, exclusion_set. group corresponds subset full dataset, subset analyst data  stored data, corresponding subset diversity_data. estimate_type","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/compute_MA_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute meta-analysis inputs for a nested-dataframe containing different datasets/subsets of analyst data — compute_MA_inputs","text":"dataframe includes additional columns ManyEcoEvo, added columns diversity_indices effects_analysis.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/compute_MA_inputs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute meta-analysis inputs for a nested-dataframe containing different datasets/subsets of analyst data — compute_MA_inputs","text":"name subset derived funs generated subset_fns_yi /subset_fns_Zr. Computes sorensen diversity indices diversity_indices subset data returning list-columns diversity_indices joins subset analyst data, returning list-column effects_analysis.","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/compute_metaanalysis_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute all metaanalysis inputs for different types of estimates — compute_metaanalysis_inputs","title":"Compute all metaanalysis inputs for different types of estimates — compute_metaanalysis_inputs","text":"Compute metaanalysis inputs different types estimates","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/compute_metaanalysis_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute all metaanalysis inputs for different types of estimates — compute_metaanalysis_inputs","text":"","code":"compute_metaanalysis_inputs(.data, estimate_type = character(1L))"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/compute_metaanalysis_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute all metaanalysis inputs for different types of estimates — compute_metaanalysis_inputs","text":".data dataset containing necessary values computing meta-analysis inputs estimate_type character string, one \"Zr\", \"yi\", \"y25\", \"y50\", \"y75\".","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/compute_metaanalysis_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute all metaanalysis inputs for different types of estimates — compute_metaanalysis_inputs","text":"dataframe processed data ready meta-analysis","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditionally apply back-transformation — conversion","title":"Conditionally apply back-transformation — conversion","text":"Conditionally apply back-transformation functions depending value transformation","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditionally apply back-transformation — conversion","text":"","code":"conversion(beta, se, transformation, sim = 10000)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditionally apply back-transformation — conversion","text":"beta Beta estimate, numeric vector length 1. se Standard error beta estimate, numeric vector length 1 transformation Character string describing transformation sim Number simulations use back-transformation. Defaults $10000$.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditionally apply back-transformation — conversion","text":"outputs back-transformation function, see family back-transformations","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/conversion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditionally apply back-transformation — conversion","text":"transformation character strings may take values: \"log\" \"logit\" \"probit\" \"square\" \"probit\" \"double_transformation\" \"cube\" \"inverse\" \"square_root\" \"powerX\", X numeric \"divided..X\", X numeric","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/conversion_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditionally apply back-transformation — conversion_2","title":"Conditionally apply back-transformation — conversion_2","text":"Conditionally apply back-transformation functions depending value transformation","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/conversion_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditionally apply back-transformation — conversion_2","text":"","code":"conversion_2(beta, se, response_transformation, link_fun, sim = 10000)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/conversion_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditionally apply back-transformation — conversion_2","text":"beta Beta estimate, numeric vector length 1. se Standard error beta estimate, numeric vector length 1 response_transformation Character string describing transformation link_fun Character string describing link function sim Number simulations use back-transformation. Defaults $10000$.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/conversion_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditionally apply back-transformation — conversion_2","text":"outputs back-transformation function, see family back-transformations","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/convert_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Predictions — convert_predictions","title":"Convert Predictions — convert_predictions","text":"Converts sample predictions link scale back response scale","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/convert_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Predictions — convert_predictions","text":"","code":"convert_predictions(   augmented_data,   transformation_type,   response_transformation,   link_fun )"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/convert_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Predictions — convert_predictions","text":"augmented_data tibble analysts's sample prediction data 3 scenarios","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/convert_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Predictions — convert_predictions","text":"tibble sample predictions response variable scale response variable used analyst","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_analyses_variables_used.html","id":null,"dir":"Reference","previous_headings":"","what":"Count number of analyses each variable is used — count_analyses_variables_used","title":"Count number of analyses each variable is used — count_analyses_variables_used","text":"Count number analyses variable used","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_analyses_variables_used.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count number of analyses each variable is used — count_analyses_variables_used","text":"","code":"count_analyses_variables_used(data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_analyses_variables_used.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count number of analyses each variable is used — count_analyses_variables_used","text":"data dataframe containing variables dataset, id_col columns filled name variable indicating variable usage.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_analyses_variables_used.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count number of analyses each variable is used — count_analyses_variables_used","text":"dataframe counts n variable used across analyses within given dataset","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_analyses_variables_used.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Count number of analyses each variable is used — count_analyses_variables_used","text":"Values variable columns character strings NA. NA values treated absence variable given analysis (observation / row), character strings treated presence variable given analysis. Variable presence analysis converted numeric 1's/0's summed calculate total times analysis used across analyses (n).","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_analyses_variables_used.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Count number of analyses each variable is used — count_analyses_variables_used","text":"Hannah S. Fraser Elliot Gould","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_analyses_variables_used.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count number of analyses each variable is used — count_analyses_variables_used","text":"","code":"library(ManyEcoEvo) ManyEcoEvo %>%  select(diversity_data) %>%   tidyr::unnest(diversity_data) %>%   count_analyses_variables_used() #> Error in select(., diversity_data): could not find function \"select\""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_binary_coded_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise binary coded features of analyses — count_binary_coded_features","title":"Summarise binary coded features of analyses — count_binary_coded_features","text":"Summarise binary coded features analyses","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_binary_coded_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise binary coded features of analyses — count_binary_coded_features","text":"","code":"count_binary_coded_features(data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_binary_coded_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise binary coded features of analyses — count_binary_coded_features","text":"data dataframe containing variables dataset, lm, mixed_model, Bayesian, coded binary numeric vectors.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_binary_coded_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise binary coded features of analyses — count_binary_coded_features","text":"dataframe variables","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_binary_coded_features.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise binary coded features of analyses — count_binary_coded_features","text":"Hannah S. Fraser Elliot Gould","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_binary_coded_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise binary coded features of analyses — count_binary_coded_features","text":"","code":"ManyEcoEvo %>% filter(dataset == \"eucalyptus\") %>% ungroup %>%  select(data) %>%  unnest(data) %>%  mutate(lm = ifelse(linear_model == \"linear\", 1, 0), #TODO move into master processing         glm = ifelse(linear_model == \"generalised\", 1, 0),         Bayesian = as.numeric(Bayesian)) %>%   count_binary_coded_features() #> Error in mutate(., lm = ifelse(linear_model == \"linear\", 1, 0), glm = ifelse(linear_model ==     \"generalised\", 1, 0), Bayesian = as.numeric(Bayesian)): could not find function \"mutate\""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_teams_analyses.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise number of analyst teams and total analyses per dataset — count_teams_analyses","title":"Summarise number of analyst teams and total analyses per dataset — count_teams_analyses","text":"Summarise number analyst teams total analyses per dataset","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_teams_analyses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise number of analyst teams and total analyses per dataset — count_teams_analyses","text":"","code":"count_teams_analyses(data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_teams_analyses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise number of analyst teams and total analyses per dataset — count_teams_analyses","text":"data dataframe containing variables TeamIdentifier dataset","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_teams_analyses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise number of analyst teams and total analyses per dataset — count_teams_analyses","text":"dataframe columns  dataset, total_teams total_analyses equal number rows number unique values within dataset variable input data.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_teams_analyses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise number of analyst teams and total analyses per dataset — count_teams_analyses","text":"Hannah S. Fraser Elliot Gould","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/count_teams_analyses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise number of analyst teams and total analyses per dataset — count_teams_analyses","text":"","code":"ManyEcoEvo %>%  filter(dataset == \"blue tit\") %>%  ungroup %>%  select(data) %>%  unnest(data) %>%  count_teams_analyses() #> Error in unnest(., data): could not find function \"unnest\""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/cube_back.html","id":null,"dir":"Reference","previous_headings":"","what":"Back transform beta estimates for models with $x^3$-link — cube_back","title":"Back transform beta estimates for models with $x^3$-link — cube_back","text":"Back transform beta estimates models $x^3$-link","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/cube_back.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back transform beta estimates for models with $x^3$-link — cube_back","text":"","code":"cube_back(beta, se, sim)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/cube_back.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back transform beta estimates for models with $x^3$-link — cube_back","text":"beta Analyst beta estimate se Standard error analyst's beta estimate. sim numeric vector length 1. number simulations.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/cube_back.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back transform beta estimates for models with $x^3$-link — cube_back","text":"data frame containing mean estimate, standard error, quantiles","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/divide_back.html","id":null,"dir":"Reference","previous_headings":"","what":"Back transform beta estimates or out-of-sample predictions from models whose response variable has been divided by some number — divide_back","title":"Back transform beta estimates or out-of-sample predictions from models whose response variable has been divided by some number — divide_back","text":"Back transform beta estimates --sample predictions models whose response variable divided number","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/divide_back.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back transform beta estimates or out-of-sample predictions from models whose response variable has been divided by some number — divide_back","text":"","code":"divide_back(beta, se, sim, n)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/divide_back.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back transform beta estimates or out-of-sample predictions from models whose response variable has been divided by some number — divide_back","text":"beta Analyst beta estimate. Numeric vector length 1. se Standard error analyst's beta estimate. Numeric vector length 1. sim Number simulations. Numeric vector length 1. n Numeric vector length 1 describing value divisor.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/divide_back.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back transform beta estimates or out-of-sample predictions from models whose response variable has been divided by some number — divide_back","text":"data frame containing mean estimate, standard error, quantiles","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/est_to_zr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert estimate to Zr — est_to_zr","title":"Convert estimate to Zr — est_to_zr","text":"Convert estimate Zr","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/est_to_zr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert estimate to Zr — est_to_zr","text":"","code":"est_to_zr(beta_estimate, beta_SE, adjusted_df)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/est_to_zr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert estimate to Zr — est_to_zr","text":"beta_estimate numeric vector, beta estimate analysis either blue tit eucalyptus dataset beta_SE numeric vector, standard error beta_estimate adjusted_df numeric vector adjusted degrees freedom analysis generating beta_SE beta_estimate","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/est_to_zr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert estimate to Zr — est_to_zr","text":"named list length 2 containing converted Zr VZr values","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/est_to_zr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert estimate to Zr — est_to_zr","text":"Convert beta estimate, standard error degrees freedom r Zr sampling variance","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/exclude_extreme_VZ.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude extreme values of VZ from a dataframe of standardised predictions — exclude_extreme_VZ","title":"Exclude extreme values of VZ from a dataframe of standardised predictions — exclude_extreme_VZ","text":"Exclude extreme values VZ dataframe standardised predictions","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/exclude_extreme_VZ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude extreme values of VZ from a dataframe of standardised predictions — exclude_extreme_VZ","text":"","code":"exclude_extreme_VZ(df = data.frame(), VZ_cutoff = numeric(1L))"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/exclude_extreme_VZ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude extreme values of VZ from a dataframe of standardised predictions — exclude_extreme_VZ","text":"df  VZ_cutoff numeric vector length 1, values equal greater value VZ filtered df.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/exclude_extreme_VZ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude extreme values of VZ from a dataframe of standardised predictions — exclude_extreme_VZ","text":"dataframe observations removed value less VZ\\_cutoff.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_boxcox_ratings_cat.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_cat","title":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_cat","text":"Fit lmer model box-cox transformed deviation meta-analytic mean scores function continuous peer-review ratings","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_boxcox_ratings_cat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_cat","text":"","code":"fit_boxcox_ratings_cat(.data, outcome, outcome_var, interceptless = FALSE)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_boxcox_ratings_cat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_cat","text":".data Data model fitting outcome outcome variable, unquoted. outcome_var Variance outcome variable interceptless logical relating whether model interceptless . Defaults FALSE.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_boxcox_ratings_cat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_cat","text":"object class lmer.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_boxcox_ratings_cont.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_cont","title":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_cont","text":"Fit lmer model box-cox transformed deviation meta-analytic mean scores function continuous peer-review ratings","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_boxcox_ratings_cont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_cont","text":"","code":"fit_boxcox_ratings_cont(.data, outcome, outcome_var)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_boxcox_ratings_cont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_cont","text":".data Data model fitting outcome outcome variable, unquoted. outcome_var Variance outcome variable","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_boxcox_ratings_cont.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_cont","text":"object class lmer.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_boxcox_ratings_cont.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_cont","text":"","code":"# Example Usage: # Note, outcome = the name using NSE of the response variable, otucome_var = the # variance associated with that variable.  # library(tidyverse);library(targets);library(metafor);library(tidymodels);library(multilevelmod) # tar_load(meta_analysis_outputs) # meta_analysis_outputs$data[[1]] %>% #   fit_boxcox_ratings_cont(., #                                   box_cox_abs_deviation_score_estimate, #                                   VZr )"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_boxcox_ratings_ord.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_ord","title":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_ord","text":"Fit lmer model box-cox transformed deviation meta-analytic mean scores function continuous peer-review ratings","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_boxcox_ratings_ord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_ord","text":"","code":"fit_boxcox_ratings_ord(.data, outcome, outcome_var, interceptless = FALSE)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_boxcox_ratings_ord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_ord","text":".data Data model fitting outcome outcome variable, unquoted. outcome_var Variance outcome variable interceptless logical relating whether model interceptless . Defaults FALSE.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_boxcox_ratings_ord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit model of boxcox deviation scores as function of continuous ratings — fit_boxcox_ratings_ord","text":"object class lmer.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_metafor_mv.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Multivariate Metaregression using metafoR — fit_metafor_mv","title":"Fit Multivariate Metaregression using metafoR — fit_metafor_mv","text":"Fit Multivariate Metaregression using metafoR","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_metafor_mv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Multivariate Metaregression using metafoR — fit_metafor_mv","text":"","code":"fit_metafor_mv(estimate, variance, estimate_type = character(1L), data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_metafor_mv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Multivariate Metaregression using metafoR — fit_metafor_mv","text":"estimate Numeric vector variance Numeric vector estimate_type Character vector either \"Zr\", \"y50\", \"y25\", \"y75\". data Dataframe containing estimates variances case id column study_id.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_metafor_mv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Multivariate Metaregression using metafoR — fit_metafor_mv","text":"Object class rma.mv","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_metafor_mv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Multivariate Metaregression using metafoR — fit_metafor_mv","text":"","code":"#TODO -- is this the best way of setting up this fun?? (i.e. to take numeric vectors)? # Example Usage: # library(tidyverse);library(targets);library(metafor) # NOT RUN, TODO: remove after create pkg # source(\"R/functions.R\") #NOT RUN, TODO: remove after create pkg tar_read(round_2_survey_meta_analysis) %>%   filter(dataset == \"eucalyptus\") %>%   filter(!is.na(Zr),          !is.na(VZr),          !is.infinite(Zr),          !is.infinite(VZr)) %>% fit_metafor_mv(estimate = .$Zr, variance = .$VZr, estimate_type = \"Zr\", data = .) #>  #> ── Fitting multivariate metaregression ── #>  #> Error: object 'VZr' not found"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_metafor_mv_reduced.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit reduced multivariate metaregression model — fit_metafor_mv_reduced","title":"Fit reduced multivariate metaregression model — fit_metafor_mv_reduced","text":"Fit reduced multivariate metaregression model","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_metafor_mv_reduced.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit reduced multivariate metaregression model — fit_metafor_mv_reduced","text":"","code":"fit_metafor_mv_reduced(estimate, variance, estimate_type = character(1L), data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_metafor_mv_reduced.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit reduced multivariate metaregression model — fit_metafor_mv_reduced","text":"estimate Numeric vector variance Numeric vector estimate_type Character vector either \"Zr\", \"y50\", \"y25\", \"y75\". data Dataframe containing estimates variances case id column study_id.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_metafor_mv_reduced.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit reduced multivariate metaregression model — fit_metafor_mv_reduced","text":"Object class rma.mv","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_metafor_mv_reduced.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit reduced multivariate metaregression model — fit_metafor_mv_reduced","text":"","code":"#TODO -- is this the best way of setting up this fun?? (i.e. to take numeric vectors)? # Example Usage: # library(tidyverse);library(targets);library(metafor) # NOT RUN, TODO: remove after create pkg # source(\"R/functions.R\") #NOT RUN, TODO: remove after create pkg tar_read(round_2_survey_meta_analysis) %>%   filter(dataset == \"eucalyptus\") %>%   filter(!is.na(Zr),          !is.na(VZr),          !is.infinite(Zr),          !is.infinite(VZr)) %>% fit_metafor_mv(estimate = .$Zr, variance = .$VZr, estimate_type = \"Zr\", data = .) #> ── Fitting multivariate metaregression ── #>  #> Error: object 'VZr' not found"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_metafor_uni.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit univariate meta-analysis with metafor — fit_metafor_uni","title":"Fit univariate meta-analysis with metafor — fit_metafor_uni","text":"Fit univariate meta-analysis metafor","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_metafor_uni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit univariate meta-analysis with metafor — fit_metafor_uni","text":"","code":"fit_metafor_uni(Zr, VZr, data, slab)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_metafor_uni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit univariate meta-analysis with metafor — fit_metafor_uni","text":"Zr Standardized beta-estimate VZr Standardised standard error beta estimate data Dataframe containing estimates variances slab Vector case identifiers","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_metafor_uni.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit univariate meta-analysis with metafor — fit_metafor_uni","text":"fitted model class rma","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_metafor_uni.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit univariate meta-analysis with metafor — fit_metafor_uni","text":"","code":"# library(tidyverse);library(targets);library(metafor) # source(\"R/functions.R\") # tar_read(round_2_survey_meta_analysis) %>% #   filter(dataset == \"eucalyptus\") %>% #   filter(!is.na(Zr), #          !is.na(VZr), #          !is.infinite(Zr), #          !is.infinite(VZr)) %>% # fit_metafor_uni(Zr = .$Zr, #                      VZr = .$VZr, #                      data = ., #                      slab = .$study_id)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_sorensen_glm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit univariate glm of deviation scores on sorensen diversity index — fit_sorensen_glm","title":"Fit univariate glm of deviation scores on sorensen diversity index — fit_sorensen_glm","text":"Fit univariate glm deviation scores sorensen diversity index","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_sorensen_glm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit univariate glm of deviation scores on sorensen diversity index — fit_sorensen_glm","text":"","code":"fit_sorensen_glm(data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_sorensen_glm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit univariate glm of deviation scores on sorensen diversity index — fit_sorensen_glm","text":"data dataframe containing box-cox transformed absolute deviation meta-analytic mean scores","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_sorensen_glm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit univariate glm of deviation scores on sorensen diversity index — fit_sorensen_glm","text":"fitted model object class glm parsnip","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_sorensen_glm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit univariate glm of deviation scores on sorensen diversity index — fit_sorensen_glm","text":"","code":"# library(tidyverse);library(targets);library(metafor);library(tidymodels) # tar_load(meta_analysis_outputs) # fit_sorensen_glm(meta_analysis_results$data[[1]])"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_uni_mixed_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit univariate glm of deviation scores on random effects inclusion — fit_uni_mixed_effects","title":"Fit univariate glm of deviation scores on random effects inclusion — fit_uni_mixed_effects","text":"Fits univariate glm box-cox transformed absolute deviation meta-analytic mean scores function whether analysis mixed effects model \\(.e. included random effects\\) .","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_uni_mixed_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit univariate glm of deviation scores on random effects inclusion — fit_uni_mixed_effects","text":"","code":"fit_uni_mixed_effects(data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_uni_mixed_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit univariate glm of deviation scores on random effects inclusion — fit_uni_mixed_effects","text":"data Dataframe containing box-cox transformed absolute deviation scores binary column called mixed_model describing whether analysis used mixed-effects model.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_uni_mixed_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit univariate glm of deviation scores on random effects inclusion — fit_uni_mixed_effects","text":"fitted model object class glm parsnip","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/fit_uni_mixed_effects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit univariate glm of deviation scores on random effects inclusion — fit_uni_mixed_effects","text":"","code":"# library(tidyverse);library(targets);library(metafor);library(tidymodels) # tar_load(meta_analysis_outputs) # fit_uni_mixed_effects(meta_analysis_results$data[[1]]) # Note: used tidymodels approach for dynamic outcome var selection # base R approach will be more succinct."},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_exclusion_subsets.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate subsets of analyst data based on different exclusion criteria — generate_exclusion_subsets","title":"Generate subsets of analyst data based on different exclusion criteria — generate_exclusion_subsets","text":"Generate subsets analyst data based different exclusion criteria","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_exclusion_subsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate subsets of analyst data based on different exclusion criteria — generate_exclusion_subsets","text":"","code":"generate_exclusion_subsets(ManyEcoEvo, estimate_type = NULL)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_exclusion_subsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate subsets of analyst data based on different exclusion criteria — generate_exclusion_subsets","text":"ManyEcoEvo dataframe estimate_type character vector, one \"Zr\", \"yi\", \"y25\", \"y50\", \"y75\", NULL.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_exclusion_subsets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate subsets of analyst data based on different exclusion criteria — generate_exclusion_subsets","text":"dataframe grouped dataset exclusion_set contains subsets data diversity_data based exclusion criteria functions defined subset_fns_Zr subset_funs_yi,","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_exclusion_subsets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate subsets of analyst data based on different exclusion criteria — generate_exclusion_subsets","text":"estimate_type NULL, column estimate_type must ManyEcoEvo.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_exclusion_subsets.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generate subsets of analyst data based on different exclusion criteria — generate_exclusion_subsets","text":"function uses functionssubset_fns_Zrand subset_fns_yi create named lists elements containing rlang_lambda_functions, whose element name name rlang_lambda_function run generate_exclusion_subsets()","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_expertise_subsets.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Expertise Data Subsets — generate_expertise_subsets","title":"Generate Expertise Data Subsets — generate_expertise_subsets","text":"Generate Expertise Data Subsets","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_expertise_subsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Expertise Data Subsets — generate_expertise_subsets","text":"","code":"generate_expertise_subsets(ManyEcoEvo, expert_subset)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_expertise_subsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Expertise Data Subsets — generate_expertise_subsets","text":"ManyEcoEvo ManyEcoEvo dataframe containing formatted raw data, formatted diversity_data, estimate_type,  dataset, publishable_subset, exclusion_set. See details. expert_subset dataframe containing column response_id containing response ID's included expert subset","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_expertise_subsets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Expertise Data Subsets — generate_expertise_subsets","text":"ManyEcoEvo dataframe added column expertise_subset new subsets data diversity_data","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_expertise_subsets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Expertise Data Subsets — generate_expertise_subsets","text":"Note function needs run ManyEcoEvo following functions run (See examples): prepare_response_variables() generate_exclusion_subsets() generate_rating_subsets() generate_rating_subsets() creates expertise subsets based full dataset exclusion_set == \"complete\" publishable_subset == \"\".","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_expertise_subsets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Expertise Data Subsets — generate_expertise_subsets","text":"","code":"library(ManyEcoEvo) library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.3     ✔ readr     2.1.4 #> ✔ forcats   1.0.0     ✔ stringr   1.5.0 #> ✔ ggplot2   3.4.4     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0 #> ✔ purrr     1.0.2      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors library(targets) targets::tar_load(ManyEcoEvo) #> Error: targets data store _targets not found. Utility functions like tar_read() and tar_load() require a pre-existing targets data store (default: _targets/) created by tar_make(), tar_make_clustermq(), or tar_make_future(). Details: https://books.ropensci.org/targets/data.html targets::tar_load(expert_subset) #> Error: targets data store _targets not found. Utility functions like tar_read() and tar_load() require a pre-existing targets data store (default: _targets/) created by tar_make(), tar_make_clustermq(), or tar_make_future(). Details: https://books.ropensci.org/targets/data.html ManyEcoEvo %>% prepare_response_variables(estimate_type = \"Zr\") |> generate_exclusion_subsets(estimate_type = \"Zr\") |> generate_rating_subsets() |> generate_expertise_subsets(expert_subset) #>  #> ── Applying exclusion rules and generating exclusion subsets ─────────────────── #>  #> ── Computing meta-analysis inputsfor estimate type Zr ────────────────────────── #>  #> ── Computing standardised effect sizes `Zr` and variance `VZr` ── #>  #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df 484.0193. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df 666.56874. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df 590.18263. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.006225, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.003996, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df 481. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.09247, #> 3. adjusted_df 316.17526. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.029, #> 3. adjusted_df 366.3. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.042, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.01416305, #> 3. adjusted_df 257.905. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.030382264, #> 3. adjusted_df 2372.82. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.01409, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.008781, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.014853, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.000769, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.033978443, #> 3. adjusted_df 347.4992526. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.01823188, #> 3. adjusted_df 55.44391. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.02039768, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.02496, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.03575, #> 3. adjusted_df NA. #>  #> ── Computing meta-analysis inputsfor estimate type Zr ────────────────────────── #>  #> ── Computing standardised effect sizes `Zr` and variance `VZr` ── #>  #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.29212, #> 3. adjusted_df 21. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.00783099999999999, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.07216, #> 3. adjusted_df 0.560867697. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.57, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.2328, #> 3. adjusted_df 343.24787. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.3188723, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.0059286, #> 3. adjusted_df 1. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.007385, #> 3. adjusted_df 3.5e-25. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.052462, #> 3. adjusted_df 3.5e-25. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.605, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 8.98, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 7.97, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 5.19, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 18.5, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 5.92, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.529, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 2.89, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.605, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.01312667, #> 3. adjusted_df -2.6269353. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.197, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.192, #> 3. adjusted_df 82.703. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.1, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se NA, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.0048042, #> 3. adjusted_df 341. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.21, #> 3. adjusted_df NA. #> ✖ Required values for computing standardised effect sizes missing: #> ! Returning \"NA\" for tupple: #> 1. beta_estimate NA, #> 2. beta_se 0.5756016, #> 3. adjusted_df 3.536992. #> Joining with `by = join_by(id_col, dataset)` #> Joining with `by = join_by(id_col, dataset)` #> Joining with `by = join_by(id_col, dataset)` #> Joining with `by = join_by(id_col, dataset)` #> Joining with `by = join_by(id_col)` #> Joining with `by = join_by(id_col)` #> Joining with `by = join_by(id_col)` #> Joining with `by = join_by(id_col)` #> Joining with `by = join_by(id_col)` #> Joining with `by = join_by(id_col)` #> Joining with `by = join_by(id_col)` #> Joining with `by = join_by(id_col)` #> Error in mutate(., data = map(.x = data, .f = dplyr::semi_join, expert_subset)): ℹ In argument: `data = map(.x = data, .f = dplyr::semi_join, #>   expert_subset)`. #> ℹ In group 1: `dataset = \"blue tit\"`, `exclusion_set = \"complete\"`, #>   `estimate_type = \"Zr\"`. #> Caused by error in `map()`: #> ℹ In index: 1. #> ℹ With name: subset_complete. #> Caused by error: #> ! object 'expert_subset' not found"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_outlier_subsets.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Outlier Subsets for ManyEcoEvo datasets — generate_outlier_subsets","title":"Generate Outlier Subsets for ManyEcoEvo datasets — generate_outlier_subsets","text":"Removes top outlier yi datasets top 2 bottom 2 outliers Zr datasets","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_outlier_subsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Outlier Subsets for ManyEcoEvo datasets — generate_outlier_subsets","text":"","code":"generate_outlier_subsets(ManyEcoEvo)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_outlier_subsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Outlier Subsets for ManyEcoEvo datasets — generate_outlier_subsets","text":"ManyEcoEvo ManyEcoEvo dataframe containing formatted raw data, formatted diversity_data, estimate_type, dataset","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_outlier_subsets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Outlier Subsets for ManyEcoEvo datasets — generate_outlier_subsets","text":"ManyEcoEvo dataframe added column exclusion_set new subsets data diversity_data","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_rating_subsets.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate subsets of ManyEcoEvo Data based on Peer Review Ratings — generate_rating_subsets","title":"Generate subsets of ManyEcoEvo Data based on Peer Review Ratings — generate_rating_subsets","text":"Generates two subsets data based complete partial exclusion datasets yi Zr estimates.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_rating_subsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate subsets of ManyEcoEvo Data based on Peer Review Ratings — generate_rating_subsets","text":"","code":"generate_rating_subsets(ManyEcoEvo)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_rating_subsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate subsets of ManyEcoEvo Data based on Peer Review Ratings — generate_rating_subsets","text":"ManyEcoEvo ManyEcoEvo dataframe containing formatted raw data, formatted diversity_data, estimate_type, dataset","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_rating_subsets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate subsets of ManyEcoEvo Data based on Peer Review Ratings — generate_rating_subsets","text":"ManyEcoEvo dataframe added column exclusion_set new subsets data diversity_data","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_yi_subsets.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate subsets of out-of-sample predictions data by estimate_type for multiple analysis datasets. — generate_yi_subsets","title":"Generate subsets of out-of-sample predictions data by estimate_type for multiple analysis datasets. — generate_yi_subsets","text":"Generate subsets --sample predictions data estimate_type multiple analysis datasets.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_yi_subsets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate subsets of out-of-sample predictions data by estimate_type for multiple analysis datasets. — generate_yi_subsets","text":"","code":"generate_yi_subsets(yi_analysis)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_yi_subsets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate subsets of out-of-sample predictions data by estimate_type for multiple analysis datasets. — generate_yi_subsets","text":"yi_analysis dataframe containing multiple datasets --sample predictions corresponding diversity data.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_yi_subsets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate subsets of out-of-sample predictions data by estimate_type for multiple analysis datasets. — generate_yi_subsets","text":"datraframe character columns dataset, estimate_type list-cols data diversity_data","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_yi_subsets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate subsets of out-of-sample predictions data by estimate_type for multiple analysis datasets. — generate_yi_subsets","text":"object yi\\_analysis contain character column dataset, list-columns data diversity\\_data. essence, data diversity_data nested dataset. data list-col grouped_dfs, also contain list-col back_transformed_data","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/generate_yi_subsets.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate subsets of out-of-sample predictions data by estimate_type for multiple analysis datasets. — generate_yi_subsets","text":"Elliot Gould","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/get_MA_fit_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract meta-analytic statistics like \\(I^2\\), etc. — get_MA_fit_stats","title":"Extract meta-analytic statistics like \\(I^2\\), etc. — get_MA_fit_stats","text":"Extract meta-analytic statistics like \\(^2\\), etc.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/get_MA_fit_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract meta-analytic statistics like \\(I^2\\), etc. — get_MA_fit_stats","text":"","code":"get_MA_fit_stats(MA_mod)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/get_MA_fit_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract meta-analytic statistics like \\(I^2\\), etc. — get_MA_fit_stats","text":"MA_mod fitted model class rma.mv","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/get_MA_fit_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract meta-analytic statistics like \\(I^2\\), etc. — get_MA_fit_stats","text":"tidy tibble \\(\\sigma^2\\) \\(^2\\) estimates MA_mod","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/get_diversity_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Diversity Data — get_diversity_data","title":"Get Diversity Data — get_diversity_data","text":"Get Diversity Data","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/get_diversity_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Diversity Data — get_diversity_data","text":"","code":"get_diversity_data(raw_data, dataset, variables = character())"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/get_diversity_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Diversity Data — get_diversity_data","text":"raw_data  dataset character string either \"eucalyptus\" \"blue tit\" variables character vector length containing names variables get diversity data ","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/get_diversity_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Diversity Data — get_diversity_data","text":"tibble diversity data either 'eucalyptus' 'blue tit' analyses","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/get_diversity_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Diversity Data — get_diversity_data","text":"Called prepare_diversity_raw","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/gg_forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Forestplot with ggplot2 — gg_forest","title":"Forestplot with ggplot2 — gg_forest","text":"Forestplot ggplot2","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/gg_forest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forestplot with ggplot2 — gg_forest","text":"","code":"gg_forest(meta_model, estimate_type, dataset = character(1L))"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/gg_forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forestplot with ggplot2 — gg_forest","text":"meta_model Fitted meta-analysis model class rma estimate_type Whether estimate standardized effect size standardised sample prediction. Must one \"Zr\", \"y50\", \"y25\", \"y75\". dataset Character string equal name dataset. One \"blue tit\" \"eucalyptus\"","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/gg_forest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forestplot with ggplot2 — gg_forest","text":"object class ggplot2","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/i2_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"i2_ml — i2_ml","title":"i2_ml — i2_ml","text":"I2 (-squared) mulilevel meta-analytic models, based Nakagawa & Santos (2012). multilevel models, can multiple I2 (see also Senior et al. 2016). Alternatively, method proposed Wolfgang Viechtbauer can also used.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/i2_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"i2_ml — i2_ml","text":"","code":"i2_ml(model, method = c(\"ratio\", \"matrix\"), data, boot = NULL)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/i2_ml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"i2_ml — i2_ml","text":"model Model object class rma.mv rma. Currently model objects using mods argument work (e.g., mod = ~1). method Method used calculate I2. Two options exist: ratio-based calculation proposed Nakagawa & Santos (\"ratio\"), Wolfgang Viechtbauer's matrix method (\"matrix\"). data Data frame used fit model. boot Number simulations run produce 95 percent confidence intervals I2. Default NULL, point estimate provided.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/i2_ml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"i2_ml — i2_ml","text":"data frame containing model results including mean effect size estimate, confidence, prediction intervals","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/i2_ml.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"i2_ml — i2_ml","text":"Shinichi Nakagawa - s.nakagawa@unsw.edu.au Daniel Noble - daniel.noble@anu.edu.au Elliot Gould - elliot.gould@unimelb.edu.au","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/identity_back.html","id":null,"dir":"Reference","previous_headings":"","what":"Back transform beta estimates for models with identity-link — identity_back","title":"Back transform beta estimates for models with identity-link — identity_back","text":"Back transform beta estimates models identity-link","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/identity_back.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back transform beta estimates for models with identity-link — identity_back","text":"","code":"identity_back(beta, se, sim)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/identity_back.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back transform beta estimates for models with identity-link — identity_back","text":"beta Analyst beta estimate se Standard error analyst's beta estimate. sim numeric vector length 1. number simulations.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/identity_back.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back transform beta estimates for models with identity-link — identity_back","text":"data frame containing mean estimate, standard error, quantiles","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/inverse_back.html","id":null,"dir":"Reference","previous_headings":"","what":"Back transform beta estimates for models with $1/x$ link — inverse_back","title":"Back transform beta estimates for models with $1/x$ link — inverse_back","text":"Back transform beta estimates models $1/x$ link","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/inverse_back.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back transform beta estimates for models with $1/x$ link — inverse_back","text":"","code":"inverse_back(beta, se, sim)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/inverse_back.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back transform beta estimates for models with $1/x$ link — inverse_back","text":"beta Analyst beta estimate se Standard error analyst's beta estimate. sim numeric vector length 1. number simulations.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/inverse_back.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back transform beta estimates for models with $1/x$ link — inverse_back","text":"data frame containing mean estimate, standard error, quantiles","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/log_back.html","id":null,"dir":"Reference","previous_headings":"","what":"Back transform beta estimates for models with log-link — log_back","title":"Back transform beta estimates for models with log-link — log_back","text":"Back transform beta estimates models log-link","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/log_back.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back transform beta estimates for models with log-link — log_back","text":"","code":"log_back(beta, se, sim)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/log_back.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back transform beta estimates for models with log-link — log_back","text":"beta Analyst beta estimate yi estimate se Standard error analyst's beta estimate yi estimate. sim numeric vector length 1. number simulations.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/log_back.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back transform beta estimates for models with log-link — log_back","text":"data frame containing mean estimate, standard error, quantiles","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/log_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"log transform response-scale yi estimates — log_transform","title":"log transform response-scale yi estimates — log_transform","text":"log transform response-scale yi estimates","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/log_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log transform response-scale yi estimates — log_transform","text":"","code":"log_transform(estimate, std.error, sim)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/log_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log transform response-scale yi estimates — log_transform","text":"estimate Point estimates original response scale std.error Standard error point estimates original response scale sim Number simulations run generating distribution sample ","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/log_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"log transform response-scale yi estimates — log_transform","text":"dataframe containing mean_log, std.error_log, lower upper 95% CI log scale","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/log_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"log transform response-scale yi estimates — log_transform","text":"","code":"log_transform(1.77, 1.01, 1000)  #> ✔ Log-transformed out-of-sample predictions, using 1000 simulations. #>    mean_log std.error_log     lower    upper #> 1 0.4661114     0.7304484 -1.332882 1.314684"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/logit_back.html","id":null,"dir":"Reference","previous_headings":"","what":"Back transform beta estimates for models with logit-link — logit_back","title":"Back transform beta estimates for models with logit-link — logit_back","text":"Back transform beta estimates models logit-link","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/logit_back.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back transform beta estimates for models with logit-link — logit_back","text":"","code":"logit_back(beta, se, sim)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/logit_back.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back transform beta estimates for models with logit-link — logit_back","text":"beta Analyst beta estimate se Standard error analyst's beta estimate. sim numeric vector length 1. number simulations.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/logit_back.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back transform beta estimates for models with logit-link — logit_back","text":"data frame containing mean estimate, standard error, quantiles","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/make_param_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Make paramater table — make_param_table","title":"Make paramater table — make_param_table","text":"make_param_table() calculates mean standard deviation numeric variables dataframe tibble.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/make_param_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make paramater table — make_param_table","text":"","code":"make_param_table(analysis_data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/make_param_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make paramater table — make_param_table","text":"analysis_data dataframe tibble.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/make_param_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make paramater table — make_param_table","text":"tibble.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/make_param_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make paramater table — make_param_table","text":"parameter table used computation Z-values standardisation --sample predictions pred_to_Zr(). make_param_table() returns tidy, long-form tibble variable names analysis_data stored columnvariable, corresponding parameter (\"mean\" \"sd\"), value parameter.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/make_param_table.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Make paramater table — make_param_table","text":"Currently variable names analysis_data must contain . character used split variable parameter pivot_longer()","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/make_param_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make paramater table — make_param_table","text":"","code":"make_param_table(ManyEcoEvo::blue_tit_data) #> # A tibble: 34 × 3 #>    variable            parameter      value #>    <chr>               <chr>          <dbl> #>  1 hatch_year          mean        2002.    #>  2 hatch_year          sd             0.787 #>  3 hatch_nest_breed_ID mean      202139.    #>  4 hatch_nest_breed_ID sd           769.    #>  5 hatch_nest_OH       mean          41.7   #>  6 hatch_nest_OH       sd             8.54  #>  7 rear_nest_breed_ID  mean      202140.    #>  8 rear_nest_breed_ID  sd           771.    #>  9 rear_nest_trt       mean           5.78  #> 10 rear_nest_trt       sd             0.816 #> # ℹ 24 more rows make_param_table(ManyEcoEvo::euc_data) #> # A tibble: 74 × 3 #>    variable                parameter      value #>    <chr>                   <chr>          <dbl> #>  1 Quadrat no              mean            4.07 #>  2 Quadrat no              sd              2.37 #>  3 Easting                 mean       374341.   #>  4 Easting                 sd          24426.   #>  5 Northing                mean      5934936.   #>  6 Northing                sd          39485.   #>  7 ExoticAnnualGrass_cover mean           12.4  #>  8 ExoticAnnualGrass_cover sd             15.3  #>  9 ExoticAnnualHerb_cover  mean            7.89 #> 10 ExoticAnnualHerb_cover  sd             11.6  #> # ℹ 64 more rows"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/make_viz.html","id":null,"dir":"Reference","previous_headings":"","what":"Make visualisations wrapper function — make_viz","title":"Make visualisations wrapper function — make_viz","text":"Computes model summaries, tidy model summaries, model fit stats, funnel plots forest plots dataframe multiple fitted models","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/make_viz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make visualisations wrapper function — make_viz","text":"","code":"make_viz(data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/make_viz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make visualisations wrapper function — make_viz","text":"data nested dataframe processed standardised data stored list-column data, grouped variables exclusion_set, dataset, estimate_type","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/make_viz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make visualisations wrapper function — make_viz","text":"nested dataframe grouped variables exclusion_set, dataset, estimate_type,","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/meta_analyse_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Meta-analyses multiple datasets or subsets of datasets of analyst data — meta_analyse_datasets","title":"Meta-analyses multiple datasets or subsets of datasets of analyst data — meta_analyse_datasets","text":"Runs meta-analyses regression models ManyEcoEvo project analysis, including: Fitting univariate / fixed-effects meta-analysis Calculating deviation every effect size / point-estimate meta-analytic mean data subsetes absolute, box-cox transformed deviation scores univariate GLM regression transformed deviation scores sorensen diversity indices univariate GLM regression transformed deviation scores continuous peer-review ratings univariate GLM regression transformed deviation scores categorical peer-review ratings univariate GLM regression transformed deviation scores binary variable corresponding whether analysis mixed-effects model (.e. GLM random-effects) . implemented: multivariate regression #TODO deviation scores transformed categorical ratings intercept (nice plotting / ecploration).","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/meta_analyse_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meta-analyses multiple datasets or subsets of datasets of analyst data — meta_analyse_datasets","text":"","code":"meta_analyse_datasets(MA_data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/meta_analyse_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Meta-analyses multiple datasets or subsets of datasets of analyst data — meta_analyse_datasets","text":"MA_data nested-dataframe grouped dataset / exclusion_set, estimate_type, containing list-column prepared analyst subset data effects_analysis ready meta-analysis.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/meta_analyse_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Meta-analyses multiple datasets or subsets of datasets of analyst data — meta_analyse_datasets","text":"nested dataframe columns object parsed arg MA_data, additional columns results analysis: MA_mod, sorensen_glm, box_cox_ratings_cont, box_cox_ratings_cat, box_cox_rating_cat_no_int, uni_mixed_effects","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/meta_analyse_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Meta-analyses multiple datasets or subsets of datasets of analyst data — meta_analyse_datasets","text":"","code":"# meta_analyse_datasets(targets::tar_read(round_2_survey_meta_analysis))   # remove_problematic_responses <-    #   preprocessed_dataset %>%    #   dplyr::filter(dataset == \"eucalyptus\",   #          (max(VZr, na.rm = TRUE) == VZr)) TODO, do we need to include now that INF's removed?"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/named_group_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Split data frame by groups and name elements — named_group_split","title":"Split data frame by groups and name elements — named_group_split","text":"Split data frame groups name elements","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/named_group_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split data frame by groups and name elements — named_group_split","text":"","code":"named_group_split(.data, grouping_variable)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/named_group_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split data frame by groups and name elements — named_group_split","text":".data tbl. grouping_variable Unquoted variable name group columns ","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/named_group_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split data frame by groups and name elements — named_group_split","text":"named list tibbles. tibble contains rows .tbl associated group columns, including grouping variables. Note returns list_of slightly stricter simple list useful representing lists every element type.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/named_group_split.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split data frame by groups and name elements — named_group_split","text":"Function fail character string provided grouping_variable instead bare variable name.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/named_group_split.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split data frame by groups and name elements — named_group_split","text":"","code":"named_group_split(ManyEcoEvo::euc_data , Property) #> $Barlow #> # A tibble: 18 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 1        2006-07-24 Winter 2006            1  310042  5934571 nne    #>  2 2        2006-07-24 Winter 2006            2  310087  5934567 ne     #>  3 3        2006-07-24 Winter 2006            3  310240  5934699 se     #>  4 4        2006-07-24 Winter 2006            4  309998  5934968 0      #>  5 5        2006-07-24 Winter 2006            5  309958  5934752 0      #>  6 6        2006-07-24 Winter 2006            6  310137  5934765 0      #>  7 118      2006-11-10 Spring 2006            1  310059  5935151 e      #>  8 119      2006-11-10 Spring 2006            2  310272  5935064 0      #>  9 120      2006-11-10 Spring 2006            3  310195  5935288 n      #> 10 121      2006-11-10 Spring 2006            4  310218  5934982 ne     #> 11 122      2006-11-10 Spring 2006            5  310034  5934700 e      #> 12 123      2006-11-10 Spring 2006            6  309996  5934758 n      #> 13 235      2007-04-19 Autumn 2007            1  310163  5935181 e      #> 14 236      2007-04-19 Autumn 2007            2  310038  5935014 s      #> 15 237      2007-04-19 Autumn 2007            3  310122  5934637 0      #> 16 238      2007-04-19 Autumn 2007            4  310161  5934480 0      #> 17 239      2007-04-19 Autumn 2007            5  310266  5934597 se     #> 18 240      2007-04-19 Autumn 2007            6  310280  5935010 0      #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, #> #   BareGround_cover <dbl>, Litter_cover <dbl>, MossLichen_cover <dbl>, … #>  #> $Blaber #> # A tibble: 15 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 7        2006-07-25 Winter 2006            1  386643  5936462 e      #>  2 8        2006-07-25 Winter 2006            2  386736  5936384 e      #>  3 9        2006-07-25 Winter 2006            3  386732  5936315 e      #>  4 10       2006-07-25 Winter 2006            4  386633  5936324 e      #>  5 11       2006-07-25 Winter 2006            5  386896  5936282 e      #>  6 124      2006-11-14 Spring 2006            1  387003  5936393 e      #>  7 125      2006-11-14 Spring 2006            2  386476  5936219 e      #>  8 126      2006-11-14 Spring 2006            3  386827  5936476 e      #>  9 127      2006-11-14 Spring 2006            4  386616  5936267 e      #> 10 128      2006-11-14 Spring 2006            5  386709  5936234 e      #> 11 241      2007-04-17 Autumn 2007            1  386272  5936457 e      #> 12 242      2007-04-17 Autumn 2007            2  387031  5936429 e      #> 13 243      2007-04-17 Autumn 2007            3  386358  5936349 e      #> 14 244      2007-04-17 Autumn 2007            4  386353  5936444 e      #> 15 245      2007-04-17 Autumn 2007            5  386675  5936398 e      #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, #> #   BareGround_cover <dbl>, Litter_cover <dbl>, MossLichen_cover <dbl>, … #>  #> $DClark #> # A tibble: 18 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 12       2006-07-19 Winter 2006            1  380890  5959540 se     #>  2 13       2006-07-19 Winter 2006            2  380734  5959474 s      #>  3 14       2006-07-19 Winter 2006            3  381469  5959397 e      #>  4 15       2006-07-19 Winter 2006            4  381024  5959384 s      #>  5 16       2006-07-19 Winter 2006            5  380890  5959591 se     #>  6 17       2006-07-19 Winter 2006            6  381203  5959676 e      #>  7 129      2006-11-14 Spring 2006            1  380818  5959432 nw     #>  8 130      2006-11-14 Spring 2006            2  381282  5959592 s      #>  9 131      2006-11-14 Spring 2006            3  381475  5959610 e      #> 10 132      2006-11-14 Spring 2006            4  381423  5959607 e      #> 11 133      2006-11-14 Spring 2006            5  381170  5959382 s      #> 12 134      2006-11-14 Spring 2006            6  381127  5959717 e      #> 13 246      2007-04-17 Autumn 2007            1  381391  5959468 s      #> 14 247      2007-04-17 Autumn 2007            2  380947  5959427 0      #> 15 248      2007-04-17 Autumn 2007            3  381324  5959557 0      #> 16 249      2007-04-17 Autumn 2007            4  380756  5959400 e      #> 17 250      2007-04-17 Autumn 2007            5  381203  5959726 s      #> 18 251      2007-04-17 Autumn 2007            6  381236  5959842 e      #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, #> #   BareGround_cover <dbl>, Litter_cover <dbl>, MossLichen_cover <dbl>, … #>  #> $Gough #> # A tibble: 27 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 18       2006-07-26 Winter 2006            1  358873  5921525 0      #>  2 19       2006-07-26 Winter 2006            2  359203  5921862 0      #>  3 20       2006-07-26 Winter 2006            3  358793  5921874 se     #>  4 21       2006-07-26 Winter 2006            4  358452  5921673 n      #>  5 22       2006-07-26 Winter 2006            5  359497  5922192 s      #>  6 23       2006-07-26 Winter 2006            6  359480  5955191 n      #>  7 24       2006-07-26 Winter 2006            7  359428  5921795 s      #>  8 25       2006-07-26 Winter 2006            8  358742  5921709 s      #>  9 26       2006-07-26 Winter 2006            9  359198  5921949 s      #> 10 135      2006-11-04 Spring 2006            1  358522  5921752 s      #> # ℹ 17 more rows #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, … #>  #> $Green #> # A tibble: 12 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 27       2006-07-27 Winter 2006            1  360032  5871750 n      #>  2 28       2006-07-27 Winter 2006            2  359983  5871719 n      #>  3 29       2006-07-27 Winter 2006            3  360061  5871604 e      #>  4 30       2006-07-27 Winter 2006            4  359779  5871566 e      #>  5 144      2006-12-07 Spring 2006            1  359810  5871505 w      #>  6 145      2006-12-07 Spring 2006            2  359692  5871634 n      #>  7 146      2006-12-07 Spring 2006            3  359865  5871733 s      #>  8 147      2006-12-07 Spring 2006            4  359972  5871655 w      #>  9 261      2007-05-09 Autumn 2007            1  359972  5871635 n      #> 10 262      2007-05-09 Autumn 2007            2  359924  5871773 n      #> 11 263      2007-05-09 Autumn 2007            3  359869  5871765 n      #> 12 264      2007-05-09 Autumn 2007            4  359715  5871694 e      #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, #> #   BareGround_cover <dbl>, Litter_cover <dbl>, MossLichen_cover <dbl>, … #>  #> $Hawkey #> # A tibble: 12 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 31       2006-07-25 Winter 2006            1  330170  6010619 0      #>  2 32       2006-07-25 Winter 2006            2  330187  6010583 0      #>  3 33       2006-07-25 Winter 2006            3  330110  6010544 0      #>  4 34       2006-07-25 Winter 2006            4  330200  6010497 0      #>  5 148      2006-11-10 Spring 2006            1  330118  6010800 0      #>  6 149      2006-11-10 Spring 2006            2  330540  6010844 0      #>  7 150      2006-11-10 Spring 2006            3  330210  6010800 0      #>  8 151      2006-11-10 Spring 2006            4  330125  6010555 0      #>  9 265      2007-04-18 Autumn 2007            1  330074  6010835 0      #> 10 266      2007-04-18 Autumn 2007            2  330228  6010621 0      #> 11 267      2007-04-18 Autumn 2007            3  330258  6010626 0      #> 12 268      2007-04-18 Autumn 2007            4  330133  6010679 0      #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, #> #   BareGround_cover <dbl>, Litter_cover <dbl>, MossLichen_cover <dbl>, … #>  #> $JClark #> # A tibble: 21 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 35       2006-07-26 Winter 2006            1  367739  5821489 sw     #>  2 36       2006-07-26 Winter 2006            2  368058  5872589 w      #>  3 37       2006-07-26 Winter 2006            3  368143  5872626 s      #>  4 38       2006-07-26 Winter 2006            4  368131  5872189 s      #>  5 39       2006-07-26 Winter 2006            5  367696  5872366 nw     #>  6 40       2006-07-26 Winter 2006            6  368650  5872203 w      #>  7 41       2006-07-26 Winter 2006            7  368188  5872013 se     #>  8 152      2006-12-07 Spring 2006            1  367727  5872320 s      #>  9 153      2006-12-07 Spring 2006            2  367851  5872147 nw     #> 10 154      2006-12-07 Spring 2006            3  367744  5871824 w      #> # ℹ 11 more rows #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, … #>  #> $Kellock #> # A tibble: 27 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 42       2006-07-26 Winter 2006            1  409176  5987415 n      #>  2 43       2006-07-25 Winter 2006            2  409242  5987228 s      #>  3 44       2006-07-25 Winter 2006            3  408941  5987483 e      #>  4 45       2006-07-26 Winter 2006            4  409111  5987866 s      #>  5 46       2006-07-25 Winter 2006            5  409489  5987803 0      #>  6 47       2006-07-25 Winter 2006            6  408888  5987382 se     #>  7 48       2006-07-25 Winter 2006            7  409174  5987798 s      #>  8 49       2006-07-25 Winter 2006            8  408864  5987984 w      #>  9 50       2006-07-25 Winter 2006            9  409135  5987761 ne     #> 10 159      2006-11-10 Spring 2006            1  408962  5987848 w      #> # ℹ 17 more rows #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, … #>  #> $Martin #> # A tibble: 33 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 51       2006-07-20 Winter 2006            1  387782  5968745 e      #>  2 52       2006-07-20 Winter 2006            2  388746  5967248 0      #>  3 53       2006-07-20 Winter 2006            3  388765  5956890 ne     #>  4 54       2006-07-20 Winter 2006            4  388358  5956799 0      #>  5 55       2006-07-20 Winter 2006            5  388477  5956640 0      #>  6 56       2006-07-20 Winter 2006            6  388029  5956943 0      #>  7 57       2006-07-20 Winter 2006            7  388341  5956084 0      #>  8 58       2006-07-20 Winter 2006            8  388423  5956006 se     #>  9 59       2006-07-20 Winter 2006            9  388452  5971319 0      #> 10 60       2006-07-20 Winter 2006           10  388732  5960630 0      #> # ℹ 23 more rows #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, … #>  #> $McCracken #> # A tibble: 24 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 62       2006-07-18 Winter 2006            1  358110  5957069 0      #>  2 63       2006-07-18 Winter 2006            2  358317  5957468 0      #>  3 64       2006-07-18 Winter 2006            3  357720  5957153 0      #>  4 65       2006-07-18 Winter 2006            4  358331  5957240 0      #>  5 66       2006-07-18 Winter 2006            5  358632  5957291 0      #>  6 67       2006-07-18 Winter 2006            6  358145  5957383 0      #>  7 68       2006-07-18 Winter 2006            7  358137  5957448 0      #>  8 69       2006-07-18 Winter 2006            8  358289  5956904 0      #>  9 179      2006-11-11 Spring 2006            1  358300  5956890 0      #> 10 180      2006-11-11 Spring 2006            2  358234  5957048 0      #> # ℹ 14 more rows #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, … #>  #> $Olive #> # A tibble: 15 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 70       2006-07-27 Winter 2006            1  377590  5876368 0      #>  2 71       2006-07-27 Winter 2006            2  377744  5976421 e      #>  3 72       2006-07-27 Winter 2006            3  377219  5876496 s      #>  4 73       2006-07-27 Winter 2006            4  377015  5876440 e      #>  5 74       2006-07-27 Winter 2006            5  377790  5876366 e      #>  6 187      2006-12-06 Spring 2006            1  377201  5876434 s      #>  7 188      2006-12-06 Spring 2006            2  377301  5876368 s      #>  8 189      2006-12-06 Spring 2006            3  377707  5876436 s      #>  9 190      2006-12-06 Spring 2006            4  377587  5876420 n      #> 10 191      2006-12-06 Spring 2006            5  377862  5876384 0      #> 11 304      2007-05-08 Autumn 2007            1  377394  5876407 n      #> 12 305      2007-05-08 Autumn 2007            2  377181  5876421 n      #> 13 306      2007-05-08 Autumn 2007            3  377259  5876280 e      #> 14 307      2007-05-08 Autumn 2007            4  377951  5876374 e      #> 15 308      2007-05-08 Autumn 2007            5  377623  5876345 0      #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, #> #   BareGround_cover <dbl>, Litter_cover <dbl>, MossLichen_cover <dbl>, … #>  #> $Rokahr #> # A tibble: 21 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 75       2006-07-25 Winter 2006            1  387771  5985347 0      #>  2 76       2006-07-25 Winter 2006            2  388366  5985356 0      #>  3 77       2006-07-25 Winter 2006            3  387809  5985141 0      #>  4 78       2006-07-25 Winter 2006            4  387671  5984967 0      #>  5 79       2006-07-25 Winter 2006            5  387695  5985380 0      #>  6 80       2006-07-25 Winter 2006            6  387753  5985068 0      #>  7 81       2006-07-25 Winter 2006            7  388043  5985088 0      #>  8 192      2006-11-10 Spring 2006            1  387721  5985370 0      #>  9 193      2006-11-10 Spring 2006            2  388091  5985252 0      #> 10 194      2006-11-10 Spring 2006            3  387748  5985167 0      #> # ℹ 11 more rows #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, … #>  #> $Sharrock #> # A tibble: 12 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 82       2006-07-19 Winter 2006            1  383318  5955469 nw     #>  2 83       2006-07-19 Winter 2006            2  383400  5955169 w      #>  3 84       2006-07-19 Winter 2006            3  383228  5955360 s      #>  4 85       2006-07-19 Winter 2006            4  383368  5955220 w      #>  5 199      2006-11-14 Spring 2006            1  383259  5955400 w      #>  6 200      2006-11-14 Spring 2006            2  383454  5955569 w      #>  7 201      2006-11-14 Spring 2006            3  383340  5955291 nw     #>  8 202      2006-11-14 Spring 2006            4  383247  5955254 nw     #>  9 316      2007-04-17 Autumn 2007            1  383431  5955513 w      #> 10 317      2007-04-17 Autumn 2007            2  383359  5955547 0      #> 11 318      2007-04-17 Autumn 2007            3  383463  5955256 0      #> 12 319      2007-04-17 Autumn 2007            4  383492  5955228 s      #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, #> #   BareGround_cover <dbl>, Litter_cover <dbl>, MossLichen_cover <dbl>, … #>  #> $Staff #> # A tibble: 27 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 86       2006-07-27 Winter 2006            1  385708  5939744 nw     #>  2 87       2006-07-27 Winter 2006            2  386193  5939749 s      #>  3 88       2006-07-27 Winter 2006            3  385599  5939313 0      #>  4 89       2006-07-27 Winter 2006            4  385701  5939171 sw     #>  5 90       2006-07-27 Winter 2006            5  386179  5939590 n      #>  6 91       2006-07-27 Winter 2006            6  386037  5939836 n      #>  7 92       2006-07-27 Winter 2006            7  385604  5939140 e      #>  8 93       2006-07-27 Winter 2006            8  385700  5939655 s      #>  9 94       2006-07-27 Winter 2006            9  385991  5939583 n      #> 10 203      2006-11-15 Spring 2006            1  386235  5939864 nw     #> # ℹ 17 more rows #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, … #>  #> $Stoney #> # A tibble: 21 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 95       2006-07-27 Winter 2006            1  410529  5895093 e      #>  2 96       2006-07-27 Winter 2006            2  410683  5895072 e      #>  3 97       2006-07-27 Winter 2006            3  410440  5895054 ne     #>  4 98       2006-07-27 Winter 2006            4  410545  5895038 e      #>  5 99       2006-07-27 Winter 2006            5  410374  5895094 se     #>  6 100      2006-07-27 Winter 2006            6  410210  5895023 e      #>  7 101      2006-07-27 Winter 2006            7  410284  5895820 ne     #>  8 212      2006-12-08 Spring 2006            1  410616  5899138 e      #>  9 213      2006-12-08 Spring 2006            2  410623  5899408 e      #> 10 214      2006-12-08 Spring 2006            3  410572  5898758 e      #> # ℹ 11 more rows #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, … #>  #> $Taylor #> # A tibble: 15 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 102      2006-07-24 Winter 2006            1  389720  5954557 0      #>  2 103      2006-07-24 Winter 2006            2  378805  5954456 0      #>  3 104      2006-07-24 Winter 2006            3  389669  5954833 0      #>  4 105      2006-07-24 Winter 2006            4  389746  5954624 0      #>  5 106      2006-07-24 Winter 2006            5  389635  5954910 0      #>  6 219      2006-10-14 Spring 2006            1  389718  5954830 0      #>  7 220      2006-10-14 Spring 2006            2  389698  5954770 0      #>  8 221      2006-10-14 Spring 2006            3  389775  5954594 0      #>  9 222      2006-10-14 Spring 2006            4  389817  5954875 0      #> 10 223      2006-10-14 Spring 2006            5  389750  5954882 0      #> 11 336      2007-04-16 Autumn 2007            4  389851  5954634 0      #> 12 337      2007-04-16 Autumn 2007            1  389643  5954703 0      #> 13 338      2007-04-16 Autumn 2007            2  389653  5954793 0      #> 14 339      2007-04-16 Autumn 2007            3  389607  5954928 0      #> 15 340      2007-04-16 Autumn 2007            5  389854  5954441 0      #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, #> #   BareGround_cover <dbl>, Litter_cover <dbl>, MossLichen_cover <dbl>, … #>  #> $Wakefield #> # A tibble: 12 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 107      2006-07-27 Winter 2006            1  348307  5874042 nw     #>  2 108      2006-07-27 Winter 2006            2  348206  5874084 s      #>  3 109      2006-07-27 Winter 2006            3  348532  5874001 nw     #>  4 110      2006-07-27 Winter 2006            4  348165  5874028 s      #>  5 224      2006-12-07 Spring 2006            1  348305  5873844 s      #>  6 225      2006-12-07 Spring 2006            2  348562  5874018 n      #>  7 226      2006-12-07 Spring 2006            3  348253  5879750 s      #>  8 227      2006-12-07 Spring 2006            4  348391  5873773 s      #>  9 341      2007-05-09 Autumn 2007            1  348451  5873910 se     #> 10 342      2007-05-09 Autumn 2007            2  348442  5873883 s      #> 11 343      2007-05-09 Autumn 2007            3  348251  5873900 0      #> 12 344      2007-05-09 Autumn 2007            4  348188  5873921 s      #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, #> #   BareGround_cover <dbl>, Litter_cover <dbl>, MossLichen_cover <dbl>, … #>  #> $Yorston #> # A tibble: 21 × 42 #>    SurveyID Date       Season      `Quadrat no` Easting Northing Aspect #>    <fct>    <date>     <chr>              <dbl>   <dbl>    <dbl> <chr>  #>  1 111      2006-07-26 Winter 2006            1  359010  5894495 nw     #>  2 112      2006-07-26 Winter 2006            2  359018  5894606 nw     #>  3 113      2006-07-26 Winter 2006            3  358205  5895793 s      #>  4 114      2006-07-26 Winter 2006            4  358932  5894600 nw     #>  5 115      2006-07-26 Winter 2006            5  358861  5894634 w      #>  6 116      2006-07-26 Winter 2006            6  358074  5895284 s      #>  7 117      2006-07-26 Winter 2006            7  357961  5895704 ne     #>  8 228      2006-11-17 Spring 2006            1  358010  5895886 w      #>  9 229      2006-11-17 Spring 2006            2  358179  5895876 w      #> 10 230      2006-11-17 Spring 2006            3  358917  5894850 w      #> # ℹ 11 more rows #> # ℹ 35 more variables: `Landscape position` <chr>, #> #   ExoticAnnualGrass_cover <dbl>, ExoticAnnualHerb_cover <dbl>, #> #   ExoticPerennialHerb_cover <dbl>, ExoticPerennialGrass_cover <dbl>, #> #   ExoticShrub_cover <dbl>, NativePerennialFern_cover <dbl>, #> #   NativePerennialGrass_cover <dbl>, NativePerennialHerb_cover <dbl>, #> #   NativePerennialGraminoid_cover <dbl>, NativeShrub_cover <dbl>, … #>  named_group_split(ManyEcoEvo::blue_tit_data, hatch_Area) #> $B #> # A tibble: 726 × 41 #>    chick_ring_number hatch_year hatch_nest_breed_ID hatch_Box hatch_mom_Ring #>    <chr>                  <dbl>               <dbl> <chr>     <chr>          #>  1 P804103                 2001              201123 B100      .              #>  2 P804104                 2001              201123 B100      .              #>  3 P804106                 2001              201123 B100      .              #>  4 P804107                 2001              201123 B100      .              #>  5 P804108                 2001              201123 B100      .              #>  6 P804110                 2001              201123 B100      .              #>  7 P804112                 2001              201123 B100      .              #>  8 P804115                 2001              201123 B100      .              #>  9 P804117                 2001              201123 B100      .              #> 10 P804118                 2001              201123 B100      .              #> # ℹ 716 more rows #> # ℹ 36 more variables: hatch_nest_dad_Ring <chr>, `Extra-pair_paternity` <chr>, #> #   `Extra-pair_dad_ring` <chr>, `genetic_dad_ring_(WP_or_EP)` <chr>, #> #   hatch_nest_LD <chr>, hatch_nest_CS <chr>, hatch_nest_OH <dbl>, #> #   d0_hatch_nest_brood_size <chr>, d14_hatch_nest_brood_size <chr>, #> #   rear_nest_breed_ID <dbl>, rear_area <chr>, rear_Box <chr>, #> #   rear_mom_Ring <chr>, rear_dad_Ring <chr>, rear_nest_trt <dbl>, … #>  #> $C #> # A tibble: 577 × 41 #>    chick_ring_number hatch_year hatch_nest_breed_ID hatch_Box hatch_mom_Ring #>    <chr>                  <dbl>               <dbl> <chr>     <chr>          #>  1 P804016                 2001              201194 C130      P803008        #>  2 P804017                 2001              201194 C130      P803008        #>  3 P804018                 2001              201167 C26       P803005        #>  4 P804019                 2001              201194 C130      P803008        #>  5 P804020                 2001              201167 C26       P803005        #>  6 P804021                 2001              201194 C130      P803008        #>  7 P804022                 2001              201194 C130      P803008        #>  8 P804023                 2001              201194 C130      P803008        #>  9 P804024                 2001              201167 C26       P803005        #> 10 P804025                 2001              201194 C130      P803008        #> # ℹ 567 more rows #> # ℹ 36 more variables: hatch_nest_dad_Ring <chr>, `Extra-pair_paternity` <chr>, #> #   `Extra-pair_dad_ring` <chr>, `genetic_dad_ring_(WP_or_EP)` <chr>, #> #   hatch_nest_LD <chr>, hatch_nest_CS <chr>, hatch_nest_OH <dbl>, #> #   d0_hatch_nest_brood_size <chr>, d14_hatch_nest_brood_size <chr>, #> #   rear_nest_breed_ID <dbl>, rear_area <chr>, rear_Box <chr>, #> #   rear_mom_Ring <chr>, rear_dad_Ring <chr>, rear_nest_trt <dbl>, … #>  #> $CP #> # A tibble: 229 × 41 #>    chick_ring_number hatch_year hatch_nest_breed_ID hatch_Box hatch_mom_Ring #>    <chr>                  <dbl>               <dbl> <chr>     <chr>          #>  1 P804196                 2001              201225 CP40A     P803102        #>  2 P804197                 2001              201225 CP40A     P803102        #>  3 P804198                 2001              201225 CP40A     P803102        #>  4 P804199                 2001              201225 CP40A     P803102        #>  5 P804456                 2001              201225 CP40A     P803102        #>  6 P804457                 2001              201225 CP40A     P803102        #>  7 P804458                 2001              201225 CP40A     P803102        #>  8 P804459                 2001              201225 CP40A     P803102        #>  9 P804463                 2001              201225 CP40A     P803102        #> 10 P804464                 2001              201225 CP40A     P803102        #> # ℹ 219 more rows #> # ℹ 36 more variables: hatch_nest_dad_Ring <chr>, `Extra-pair_paternity` <chr>, #> #   `Extra-pair_dad_ring` <chr>, `genetic_dad_ring_(WP_or_EP)` <chr>, #> #   hatch_nest_LD <chr>, hatch_nest_CS <chr>, hatch_nest_OH <dbl>, #> #   d0_hatch_nest_brood_size <chr>, d14_hatch_nest_brood_size <chr>, #> #   rear_nest_breed_ID <dbl>, rear_area <chr>, rear_Box <chr>, #> #   rear_mom_Ring <chr>, rear_dad_Ring <chr>, rear_nest_trt <dbl>, … #>  #> $E #> # A tibble: 333 × 41 #>    chick_ring_number hatch_year hatch_nest_breed_ID hatch_Box hatch_mom_Ring #>    <chr>                  <dbl>               <dbl> <chr>     <chr>          #>  1 P804180                 2001              201260 E51B      P803087        #>  2 P804186                 2001              201260 E51B      P803087        #>  3 P804189                 2001              201260 E51B      P803087        #>  4 P804190                 2001              201260 E51B      P803087        #>  5 P804192                 2001              201260 E51B      P803087        #>  6 P804548                 2001              201227 E3        K578406        #>  7 P804549                 2001              201227 E3        K578406        #>  8 P804550                 2001              201227 E3        K578406        #>  9 P804552                 2001              201227 E3        K578406        #> 10 P804553                 2001              201227 E3        K578406        #> # ℹ 323 more rows #> # ℹ 36 more variables: hatch_nest_dad_Ring <chr>, `Extra-pair_paternity` <chr>, #> #   `Extra-pair_dad_ring` <chr>, `genetic_dad_ring_(WP_or_EP)` <chr>, #> #   hatch_nest_LD <chr>, hatch_nest_CS <chr>, hatch_nest_OH <dbl>, #> #   d0_hatch_nest_brood_size <chr>, d14_hatch_nest_brood_size <chr>, #> #   rear_nest_breed_ID <dbl>, rear_area <chr>, rear_Box <chr>, #> #   rear_mom_Ring <chr>, rear_dad_Ring <chr>, rear_nest_trt <dbl>, … #>  #> $MP #> # A tibble: 375 × 41 #>    chick_ring_number hatch_year hatch_nest_breed_ID hatch_Box hatch_mom_Ring #>    <chr>                  <dbl>               <dbl> <chr>     <chr>          #>  1 P804101                 2001              201288 MP55      P803016        #>  2 P804102                 2001              201288 MP55      P803016        #>  3 P804105                 2001              201288 MP55      P803016        #>  4 P804109                 2001              201288 MP55      P803016        #>  5 P804111                 2001              201288 MP55      P803016        #>  6 P804113                 2001              201288 MP55      P803016        #>  7 P804114                 2001              201288 MP55      P803016        #>  8 P804116                 2001              201288 MP55      P803016        #>  9 P804119                 2001              201288 MP55      P803016        #> 10 P804121                 2001              201288 MP55      P803016        #> # ℹ 365 more rows #> # ℹ 36 more variables: hatch_nest_dad_Ring <chr>, `Extra-pair_paternity` <chr>, #> #   `Extra-pair_dad_ring` <chr>, `genetic_dad_ring_(WP_or_EP)` <chr>, #> #   hatch_nest_LD <chr>, hatch_nest_CS <chr>, hatch_nest_OH <dbl>, #> #   d0_hatch_nest_brood_size <chr>, d14_hatch_nest_brood_size <chr>, #> #   rear_nest_breed_ID <dbl>, rear_area <chr>, rear_Box <chr>, #> #   rear_mom_Ring <chr>, rear_dad_Ring <chr>, rear_nest_trt <dbl>, … #>  #> $O #> # A tibble: 600 × 41 #>    chick_ring_number hatch_year hatch_nest_breed_ID hatch_Box hatch_mom_Ring #>    <chr>                  <dbl>               <dbl> <chr>     <chr>          #>  1 P804142                 2001              201319 O27       P803035        #>  2 P804143                 2001              201319 O27       P803035        #>  3 P804144                 2001              201319 O27       P803035        #>  4 P804145                 2001              201319 O27       P803035        #>  5 P804146                 2001              201319 O27       P803035        #>  6 P804181                 2001              201325 O38B      .              #>  7 P804183                 2001              201325 O38B      .              #>  8 P804184                 2001              201325 O38B      .              #>  9 P804185                 2001              201325 O38B      .              #> 10 P804187                 2001              201325 O38B      .              #> # ℹ 590 more rows #> # ℹ 36 more variables: hatch_nest_dad_Ring <chr>, `Extra-pair_paternity` <chr>, #> #   `Extra-pair_dad_ring` <chr>, `genetic_dad_ring_(WP_or_EP)` <chr>, #> #   hatch_nest_LD <chr>, hatch_nest_CS <chr>, hatch_nest_OH <dbl>, #> #   d0_hatch_nest_brood_size <chr>, d14_hatch_nest_brood_size <chr>, #> #   rear_nest_breed_ID <dbl>, rear_area <chr>, rear_Box <chr>, #> #   rear_mom_Ring <chr>, rear_dad_Ring <chr>, rear_nest_trt <dbl>, … #>  #> $P #> # A tibble: 91 × 41 #>    chick_ring_number hatch_year hatch_nest_breed_ID hatch_Box hatch_mom_Ring #>    <chr>                  <dbl>               <dbl> <chr>     <chr>          #>  1 P805234                 2001              201364 P24       P803249        #>  2 P805235                 2001              201364 P24       P803249        #>  3 P805236                 2001              201364 P24       P803249        #>  4 P805240                 2001              201364 P24       P803249        #>  5 P805241                 2001              201364 P24       P803249        #>  6 P805242                 2001              201364 P24       P803249        #>  7 P805875                 2001              201360 P10       P803358        #>  8 P805876                 2001              201360 P10       P803358        #>  9 P805878                 2001              201360 P10       P803358        #> 10 P805910                 2001              201357 P3        P803362        #> # ℹ 81 more rows #> # ℹ 36 more variables: hatch_nest_dad_Ring <chr>, `Extra-pair_paternity` <chr>, #> #   `Extra-pair_dad_ring` <chr>, `genetic_dad_ring_(WP_or_EP)` <chr>, #> #   hatch_nest_LD <chr>, hatch_nest_CS <chr>, hatch_nest_OH <dbl>, #> #   d0_hatch_nest_brood_size <chr>, d14_hatch_nest_brood_size <chr>, #> #   rear_nest_breed_ID <dbl>, rear_area <chr>, rear_Box <chr>, #> #   rear_mom_Ring <chr>, rear_dad_Ring <chr>, rear_nest_trt <dbl>, … #>  #> $SW #> # A tibble: 405 × 41 #>    chick_ring_number hatch_year hatch_nest_breed_ID hatch_Box hatch_mom_Ring #>    <chr>                  <dbl>               <dbl> <chr>     <chr>          #>  1 P804149                 2001              201393 SW113     P803040        #>  2 P804151                 2001              201393 SW113     P803040        #>  3 P804152                 2001              201393 SW113     P803040        #>  4 P804257                 2001              201397 SW128     P803048        #>  5 P804258                 2001              201397 SW128     P803048        #>  6 P804259                 2001              201397 SW128     P803048        #>  7 P804260                 2001              201397 SW128     P803048        #>  8 P804261                 2001              201397 SW128     P803048        #>  9 P804262                 2001              201397 SW128     P803048        #> 10 P804263                 2001              201397 SW128     P803048        #> # ℹ 395 more rows #> # ℹ 36 more variables: hatch_nest_dad_Ring <chr>, `Extra-pair_paternity` <chr>, #> #   `Extra-pair_dad_ring` <chr>, `genetic_dad_ring_(WP_or_EP)` <chr>, #> #   hatch_nest_LD <chr>, hatch_nest_CS <chr>, hatch_nest_OH <dbl>, #> #   d0_hatch_nest_brood_size <chr>, d14_hatch_nest_brood_size <chr>, #> #   rear_nest_breed_ID <dbl>, rear_area <chr>, rear_Box <chr>, #> #   rear_mom_Ring <chr>, rear_dad_Ring <chr>, rear_nest_trt <dbl>, … #>  #> $W #> # A tibble: 384 × 41 #>    chick_ring_number hatch_year hatch_nest_breed_ID hatch_Box hatch_mom_Ring #>    <chr>                  <dbl>               <dbl> <chr>     <chr>          #>  1 P804042                 2001              201419 W47       .              #>  2 P804043                 2001              201417 W43       P803018        #>  3 P804044                 2001              201417 W43       P803018        #>  4 P804045                 2001              201417 W43       P803018        #>  5 P804046                 2001              201419 W47       .              #>  6 P804047                 2001              201419 W47       .              #>  7 P804048                 2001              201419 W47       .              #>  8 P804178                 2001              201414 W37       P803056        #>  9 P804179                 2001              201414 W37       P803056        #> 10 P804193                 2001              201428 W60       P803080        #> # ℹ 374 more rows #> # ℹ 36 more variables: hatch_nest_dad_Ring <chr>, `Extra-pair_paternity` <chr>, #> #   `Extra-pair_dad_ring` <chr>, `genetic_dad_ring_(WP_or_EP)` <chr>, #> #   hatch_nest_LD <chr>, hatch_nest_CS <chr>, hatch_nest_OH <dbl>, #> #   d0_hatch_nest_brood_size <chr>, d14_hatch_nest_brood_size <chr>, #> #   rear_nest_breed_ID <dbl>, rear_area <chr>, rear_Box <chr>, #> #   rear_mom_Ring <chr>, rear_dad_Ring <chr>, rear_nest_trt <dbl>, … #>"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/plot_cont_rating_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Marginal Effects for Numeric Rating Model — plot_cont_rating_effects","title":"Plot Marginal Effects for Numeric Rating Model — plot_cont_rating_effects","text":"Plot Marginal Effects Numeric Rating Model","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/plot_cont_rating_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Marginal Effects for Numeric Rating Model — plot_cont_rating_effects","text":"","code":"plot_cont_rating_effects(   df = data.frame(),   response = character(),   predictor = character(),   group = NULL,   plot = TRUE,   back_transform = FALSE )"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/plot_cont_rating_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Marginal Effects for Numeric Rating Model — plot_cont_rating_effects","text":"df Dataframe column 'abs_deviation_score_estimate', 'lambda' predictor, response columns response character vector naming response variable column df predictor character vector naming predictor variable column df group optional character vector naming random effect / grouping variable column df plot logical indicating whether plot rendered interactively , defaults TRUE back_transform logical indicating whether response variable back-transformed box-cox transformed scale absolute deviation scores","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/plot_cont_rating_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Marginal Effects for Numeric Rating Model — plot_cont_rating_effects","text":"list, first element containing fitted statistical model second element containing plot","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/plot_cont_rating_effects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Marginal Effects for Numeric Rating Model — plot_cont_rating_effects","text":"","code":"# ManyEcoEvo_results$effects_analysis[[1]] %>% #TODO use package data object instead of targets object # unnest(review_data) %>%  #   plot_cont_rating_effects(response = \"box_cox_abs_deviation_score_estimate\",  #                            predictor = \"RateAnalysis\",  #                            group = \"ReviewerId\",  #                            back_transform = TRUE) %>%  #   pluck(2) + #   ggforce::facet_zoom(xlim = c(0,100), ylim = c(0,0.55)) + #   ggpubr::theme_pubclean() + #   ggplot2::xlab(\"Rating\") + #   ggplot2::ylab(\"Deviation In Effect Size from Analytic Mean\")"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/plot_effects_diversity.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginal Effects Plot of Diversity Index Model — plot_effects_diversity","title":"Marginal Effects Plot of Diversity Index Model — plot_effects_diversity","text":"Marginal Effects Plot Diversity Index Model","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/plot_effects_diversity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginal Effects Plot of Diversity Index Model — plot_effects_diversity","text":"","code":"plot_effects_diversity(mod, df, back_transform = FALSE)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/plot_effects_diversity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginal Effects Plot of Diversity Index Model — plot_effects_diversity","text":"mod fitted model class 'lm' df dataframe columns, lambda, abs_deviation_score_estimate, box_cox_abs_deviation_score_estimate, mean_diversity_index back_transform logical, back-transform box-cox transformed absolute deviation scores ","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/plot_effects_diversity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marginal Effects Plot of Diversity Index Model — plot_effects_diversity","text":"ggplot original data,  predicted values confidence values fitted model","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/plot_effects_diversity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marginal Effects Plot of Diversity Index Model — plot_effects_diversity","text":"","code":"#targets::tar_load(ManyEcoEvo_results) #TODO change this to package data #library(tidyverse) #plot_effects_diversity(mod = ManyEcoEvo_results$sorensen_glm[[5]],  #df = ManyEcoEvo_results$effects_analysis[[5]] %>% #dat #select(mean_diversity_index, study_id,  #          starts_with(\"box_cox\"),  #                   starts_with(\"abs_dev\"), #                            lambda),  #                            back_transform = TRUE)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/power_back.html","id":null,"dir":"Reference","previous_headings":"","what":"Back transform beta estimates for models with power-link — power_back","title":"Back transform beta estimates for models with power-link — power_back","text":"Back transform beta estimates models power-link","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/power_back.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back transform beta estimates for models with power-link — power_back","text":"","code":"power_back(beta, se, sim, n)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/power_back.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back transform beta estimates for models with power-link — power_back","text":"beta Analyst beta estimate. Numeric vector length 1. se Standard error analyst's beta estimate. Numeric vector length 1. sim Number simulations. Numeric vector length 1. n Numeric vector length 1 describing power values raised transformation.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/power_back.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back transform beta estimates for models with power-link — power_back","text":"data frame containing mean estimate, standard error, quantiles","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/pred_to_Z.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize Out-Of-Sample Predictions — pred_to_Z","title":"Standardize Out-Of-Sample Predictions — pred_to_Z","text":"Standardizes --sample predictions computing Fisher's Z transformed Correlation Coefficient analysts' --sample prediction estimates corresponding standard error.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/pred_to_Z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize Out-Of-Sample Predictions — pred_to_Z","text":"","code":"pred_to_Z(back_transformed_data, params, dataset)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/pred_to_Z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize Out-Of-Sample Predictions — pred_to_Z","text":"back_transformed_data dataframe tibble columns \"estimate\" \"se.fit\", containing yi SE\\(yi\\) values respectively response_variable_name character vector","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/pred_to_Z.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Standardize Out-Of-Sample Predictions — pred_to_Z","text":"pred_to_Z expects estimates response scale, link scale.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_ManyEcoEvo.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare ManyEcoEvo raw dataset — prepare_ManyEcoEvo","title":"Prepare ManyEcoEvo raw dataset — prepare_ManyEcoEvo","text":"Prepare ManyEcoEvo raw dataset","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_ManyEcoEvo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare ManyEcoEvo raw dataset — prepare_ManyEcoEvo","text":"","code":"prepare_ManyEcoEvo(master_data_raw, master_raw_metadata, all_review_data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_ManyEcoEvo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare ManyEcoEvo raw dataset — prepare_ManyEcoEvo","text":"master_data_raw Raw data eucalyptus blue tit analyses master_raw_metadata Metadata describing master_data_raw all_review_data Review data datasets contained master_data_raw, generated prepare_review_data.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_ManyEcoEvo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare ManyEcoEvo raw dataset — prepare_ManyEcoEvo","text":"tibble ManyEcoEvo analyst response data effect-sizes ($Z_r$).","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_ManyEcoEvo_yi.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare ManyEcoEvo raw dataset for out-of-sample predictions — prepare_ManyEcoEvo_yi","title":"Prepare ManyEcoEvo raw dataset for out-of-sample predictions — prepare_ManyEcoEvo_yi","text":"Prepare ManyEcoEvo raw dataset --sample predictions","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_ManyEcoEvo_yi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare ManyEcoEvo raw dataset for out-of-sample predictions — prepare_ManyEcoEvo_yi","text":"","code":"prepare_ManyEcoEvo_yi(   master_data_raw,   master_raw_metadata,   all_prediction_data )"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_ManyEcoEvo_yi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare ManyEcoEvo raw dataset for out-of-sample predictions — prepare_ManyEcoEvo_yi","text":"master_data_raw Raw data eucalyptus blue tit analyses master_raw_metadata Metadata describing master_data_raw all_prediction_data Prediction data datasets contained tibble all_review_data Review data datasets contained master_data_raw, generated prepare_review_data. ManyEcoEvo ManyEcoEvo data generated prepare_ManyEcoEvo","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_ManyEcoEvo_yi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare ManyEcoEvo raw dataset for out-of-sample predictions — prepare_ManyEcoEvo_yi","text":"tibble ManyEcoEvo analyst response data --sample predictions ($y_i$).","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_diversity_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare diversity index data — prepare_diversity_raw","title":"Prepare diversity index data — prepare_diversity_raw","text":"Prepares data required calculating Sorensen diversity indices across analyses. \\(Non-targets function\\)","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_diversity_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare diversity index data — prepare_diversity_raw","text":"","code":"prepare_diversity_raw(master_data_raw, master_raw_metadata)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_diversity_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare diversity index data — prepare_diversity_raw","text":"master_data_raw Raw dataset eucalyptus blue tit data master_raw_metadata Metadata describing variable names master_data_raw","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_diversity_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare diversity index data — prepare_diversity_raw","text":"tibble raw diversity index data","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_response_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare response variable data for nested ManyEcoEvo dataset — prepare_response_variables","title":"Prepare response variable data for nested ManyEcoEvo dataset — prepare_response_variables","text":"Prepare response variable data nested ManyEcoEvo dataset","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_response_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare response variable data for nested ManyEcoEvo dataset — prepare_response_variables","text":"","code":"prepare_response_variables(   ManyEcoEvo,   estimate_type = character(1L),   param_table = NULL )"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_response_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare response variable data for nested ManyEcoEvo dataset — prepare_response_variables","text":"ManyEcoEvo Complete ManyEcoEvo dataset containing nested datasets different analysis exclusion set dataset estimate_type character string length 1, equal either \"Zr\", \"yi\", \"y25\", \"y50\", \"y75\", indicating type estimates prepared. param_table table parameters \\(mean, sd\\) response variables used analysts. tibble pulled named object exported ManyEcoEvo::. can overwritten users's param_table dataset.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_response_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare response variable data for nested ManyEcoEvo dataset — prepare_response_variables","text":"tibble nested list-columns","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_response_variables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare response variable data for nested ManyEcoEvo dataset — prepare_response_variables","text":"Operates nested list-columns data","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_response_variables_yi.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare response variable data for nested ManyEcoEvo dataset - out of sample predictions only — prepare_response_variables_yi","title":"Prepare response variable data for nested ManyEcoEvo dataset - out of sample predictions only — prepare_response_variables_yi","text":"Prepare response variable data nested ManyEcoEvo dataset - sample predictions ","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_response_variables_yi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare response variable data for nested ManyEcoEvo dataset - out of sample predictions only — prepare_response_variables_yi","text":"","code":"prepare_response_variables_yi(   ManyEcoEvo,   estimate_type = character(1L),   param_table = NULL )"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_response_variables_yi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare response variable data for nested ManyEcoEvo dataset - out of sample predictions only — prepare_response_variables_yi","text":"ManyEcoEvo Complete ManyEcoEvo dataset containing nested datasets different analysis exclusion set dataset estimate_type character string length 1, equal either \"yi\", \"y25\", \"y50\", \"y75\", indicating type estimates prepared. param_table table parameters \\(mean, sd\\) response variables used analysts. tibble pulled named object exported ManyEcoEvo::. can overwritten users's param_table dataset.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_response_variables_yi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare response variable data for nested ManyEcoEvo dataset - out of sample predictions only — prepare_response_variables_yi","text":"tibble nested list-columns","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_response_variables_yi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare response variable data for nested ManyEcoEvo dataset - out of sample predictions only — prepare_response_variables_yi","text":"Operates nested list-columns data","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_review_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare peer-review data from Qualtrics — prepare_review_data","title":"Prepare peer-review data from Qualtrics — prepare_review_data","text":"Prepare peer-review data Qualtrics","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_review_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare peer-review data from Qualtrics — prepare_review_data","text":"","code":"prepare_review_data(bt_reviews, euc_reviews)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_review_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare peer-review data from Qualtrics — prepare_review_data","text":"bt_reviews Blue tit review euc_reviews","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/prepare_review_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare peer-review data from Qualtrics — prepare_review_data","text":"tibble peer-review data blue tit eucalyptus analyses","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/preprocess_prediction_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess Prediction Files — preprocess_prediction_files","title":"Preprocess Prediction Files — preprocess_prediction_files","text":"Preprocess Prediction Files","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/preprocess_prediction_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess Prediction Files — preprocess_prediction_files","text":"","code":"preprocess_prediction_files(predictions_validation, all_surveys)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/preprocess_prediction_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess Prediction Files — preprocess_prediction_files","text":"predictions_validation dataframe containing outputs pointblank validation multiple sample prediction files all_surveys tibble analyst-data datasets","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/preprocess_prediction_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess Prediction Files — preprocess_prediction_files","text":"pointblank check columns nested list-column checks, submission_id computed question, new_names replacement column names given new_names, filepath appended \"data-raw/analyst_data/S2\"","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/preprocess_updated_prediction_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs QA on re-submitted out-of-sample prediction files — preprocess_updated_prediction_files","title":"Performs QA on re-submitted out-of-sample prediction files — preprocess_updated_prediction_files","text":"Performs QA re-submitted --sample prediction files","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/preprocess_updated_prediction_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs QA on re-submitted out-of-sample prediction files — preprocess_updated_prediction_files","text":"","code":"preprocess_updated_prediction_files(df = data.frame())"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/preprocess_updated_prediction_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs QA on re-submitted out-of-sample prediction files — preprocess_updated_prediction_files","text":"df dataframe containing information new prediction files","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/preprocess_updated_prediction_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs QA on re-submitted out-of-sample prediction files — preprocess_updated_prediction_files","text":"tibble list-columns containing outputs point-blank checks","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/probit_back.html","id":null,"dir":"Reference","previous_headings":"","what":"Back transform beta estimates for models with probit-link — probit_back","title":"Back transform beta estimates for models with probit-link — probit_back","text":"Back transform beta estimates models probit-link","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/probit_back.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back transform beta estimates for models with probit-link — probit_back","text":"","code":"probit_back(beta, se, sim)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/probit_back.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back transform beta estimates for models with probit-link — probit_back","text":"beta Analyst beta estimate se Standard error analyst's beta estimate. sim numeric vector length 1. number simulations.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/probit_back.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back transform beta estimates for models with probit-link — probit_back","text":"data frame containing mean estimate, standard error, quantiles","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/read_submission_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read out-of-sample-prediction analyst submission data — read_submission_data","title":"Read out-of-sample-prediction analyst submission data — read_submission_data","text":"Read --sample-prediction analyst submission data","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/read_submission_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read out-of-sample-prediction analyst submission data — read_submission_data","text":"","code":"read_submission_data(filepath)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/read_submission_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read out-of-sample-prediction analyst submission data — read_submission_data","text":"filepath","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/read_submission_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read out-of-sample-prediction analyst submission data — read_submission_data","text":"tibble sample prediction data","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/rm_inf_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes infinite and NA values from a dataframe of standardised effects — rm_inf_na","title":"Removes infinite and NA values from a dataframe of standardised effects — rm_inf_na","text":"Removes infinite NA values dataframe standardised effects","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/rm_inf_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes infinite and NA values from a dataframe of standardised effects — rm_inf_na","text":"","code":"rm_inf_na(effects_analysis, Z_colname, VZ_colname)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/rm_inf_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes infinite and NA values from a dataframe of standardised effects — rm_inf_na","text":"effects_analysis  Z_colname unquoted bare column name Z Zr estimates VZ_colname unquoted bare column name containing VZ VZr estimates","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/rm_inf_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes infinite and NA values from a dataframe of standardised effects — rm_inf_na","text":"dataframe without","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/run_model_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform model checking on series of fitted models for different datasets, exclusion sets and estimate types — run_model_checks","title":"Perform model checking on series of fitted models for different datasets, exclusion sets and estimate types — run_model_checks","text":"Checks convergence, singularity heteroscedasticy","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/run_model_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform model checking on series of fitted models for different datasets, exclusion sets and estimate types — run_model_checks","text":"","code":"run_model_checks(data, model_name = character(0L))"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/run_model_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform model checking on series of fitted models for different datasets, exclusion sets and estimate types — run_model_checks","text":"data series fitted models stored list-columns different model_names, exclusion_sets, datasets estimate_types model_name character string model name extracted nested data frame. String must contained data$model_name","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/run_model_checks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform model checking on series of fitted models for different datasets, exclusion sets and estimate types — run_model_checks","text":"tibble whose columns contain outcomes different model checks","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/square_back.html","id":null,"dir":"Reference","previous_headings":"","what":"Back transform beta estimates for models with $x^2$-link — square_back","title":"Back transform beta estimates for models with $x^2$-link — square_back","text":"Back transform beta estimates models $x^2$-link","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/square_back.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back transform beta estimates for models with $x^2$-link — square_back","text":"","code":"square_back(beta, se, sim)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/square_back.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back transform beta estimates for models with $x^2$-link — square_back","text":"beta Analyst beta estimate se Standard error analyst's beta estimate. sim numeric vector length 1. number simulations.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/square_back.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back transform beta estimates for models with $x^2$-link — square_back","text":"data frame containing mean estimate, standard error, quantiles","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/square_root_back.html","id":null,"dir":"Reference","previous_headings":"","what":"Back transform beta estimates or out-of-sample predictions from models whose response variable has been transformed by the square root — square_root_back","title":"Back transform beta estimates or out-of-sample predictions from models whose response variable has been transformed by the square root — square_root_back","text":"Back transform beta estimates --sample predictions models whose response variable transformed square root","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/square_root_back.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back transform beta estimates or out-of-sample predictions from models whose response variable has been transformed by the square root — square_root_back","text":"","code":"square_root_back(beta, se, sim)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/square_root_back.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back transform beta estimates or out-of-sample predictions from models whose response variable has been transformed by the square root — square_root_back","text":"beta Analyst beta estimate. Numeric vector length 1. se Standard error analyst's beta estimate. Numeric vector length 1. sim Number simulations. Numeric vector length 1.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/square_root_back.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back transform beta estimates or out-of-sample predictions from models whose response variable has been transformed by the square root — square_root_back","text":"data frame containing mean estimate, standard error, quantiles","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/standardise_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardise Response Variable — standardise_response","title":"Standardise Response Variable — standardise_response","text":"Standardise Response Variable","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/standardise_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardise Response Variable — standardise_response","text":"","code":"standardise_response(   dat,   estimate_type = character(1L),   param_table = NULL,   dataset = character(1L) )"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/standardise_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardise Response Variable — standardise_response","text":"estimate_type type estimate standardised. Character vector length 1, whose value may \"Zr\", \"yi\", \"y25\", \"y50\", \"y75\". param_table table estimated 'population' parameters variable analysis datasets. dataset One either \"blue tit\" \"eucalyptus\" data","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/standardise_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardise Response Variable — standardise_response","text":"tibble analyst data standardised values contained list-column called 'back_transformed_data'","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/subset_fns_Zr.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsetting Functions for Zr analysis — subset_fns_Zr","title":"Subsetting Functions for Zr analysis — subset_fns_Zr","text":"Generates list functions used subset processed ManyEcoEvo dataset","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/subset_fns_Zr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsetting Functions for Zr analysis — subset_fns_Zr","text":"","code":"subset_fns_Zr()"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/subset_fns_Zr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subsetting Functions for Zr analysis — subset_fns_Zr","text":"named list lambda functions","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/subset_fns_yi.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsetting Functions for yi analysis — subset_fns_yi","title":"Subsetting Functions for yi analysis — subset_fns_yi","text":"Generates list functions used subset processed ManyEcoEvo dataset containing --sample predictions \\(y\\_i\\)","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/subset_fns_yi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsetting Functions for yi analysis — subset_fns_yi","text":"","code":"subset_fns_yi()"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/subset_fns_yi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subsetting Functions for yi analysis — subset_fns_yi","text":"named list lambda functions","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_analyses_by_reviewer.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise analyses reviewed by reviewer — summarise_analyses_by_reviewer","title":"Summarise analyses reviewed by reviewer — summarise_analyses_by_reviewer","text":"Summarise analyses reviewed reviewer","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_analyses_by_reviewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise analyses reviewed by reviewer — summarise_analyses_by_reviewer","text":"","code":"summarise_analyses_by_reviewer(review_data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_analyses_by_reviewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise analyses reviewed by reviewer — summarise_analyses_by_reviewer","text":"review_data dataframe containing variables dataset, response_id, ReviewerId.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_analyses_by_reviewer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise analyses reviewed by reviewer — summarise_analyses_by_reviewer","text":"dataframe summarising mean, sd, min, max number reviews provided unique reviewer across analyses datasets review_data.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_analyses_by_reviewer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise analyses reviewed by reviewer — summarise_analyses_by_reviewer","text":"","code":"ManyEcoEvo %>% ungroup %>% select(data, -dataset) %>% unnest(data) %>% select(ends_with(\"_id\"), id_col, dataset, review_data) %>% unnest(review_data) %>% summarise_analyses_by_reviewer() #> # A tibble: 1 × 4 #>    mean    sd   min   max #>   <dbl> <dbl> <int> <int> #> 1  4.29  1.83     1    15"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_analysis_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Analysis Types — summarise_analysis_types","title":"Summarise Analysis Types — summarise_analysis_types","text":"Generates summary number analysis teams, total analyses, models normal error distributions, mixed effects models, models developed using Bayesian statistical methods given analysis type.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_analysis_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Analysis Types — summarise_analysis_types","text":"","code":"summarise_analysis_types(ManyEcoEvo_results, ManyEcoEvo_yi_results, ManyEcoEvo)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_analysis_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Analysis Types — summarise_analysis_types","text":"ManyEcoEvo_results tibble ManyEcoEvo_results ManyEcoEvo_yi_results tibble ManyEcoEvo_yi_results ManyEcoEvo tibble ManyEcoEvo","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_analysis_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Analysis Types — summarise_analysis_types","text":"summarised tibble variables subset, dataset, num_teams, total_analyses, sum_linear, sum_mixed, sum_Bayesian.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_analysis_types.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise Analysis Types — summarise_analysis_types","text":"Applies count_binary_coded_features() count_teams_analyses() generate data summaries.","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_analysis_types.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise Analysis Types — summarise_analysis_types","text":"Hannah S. Fraser Elliot Gould","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_analysis_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise Analysis Types — summarise_analysis_types","text":"","code":"summarise_analysis_types(ManyEcoEvo_results, ManyEcoEvo_yi_results, ManyEcoEvo) #> Adding missing grouping variables: `estimate_type`, `dataset`, `exclusion_set`, #> `publishable_subset`, `expertise_subset` #> Adding missing grouping variables: `estimate_type`, `dataset`, `exclusion_set` #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `across(...)`. #> Caused by warning: #> ! NAs introduced by coercion #> Joining with `by = join_by(subset, dataset)` #> # A tibble: 4 × 8 #>   subset    dataset total_teams total_analyses sum_linear sum_mixed sum_Bayesian #>   <chr>     <chr>         <int>          <int>      <dbl>     <dbl>        <dbl> #> 1 effects   blue t…          63            132        125       129           10 #> 2 effects   eucaly…          40             79         15        62            5 #> 3 predicti… blue t…          43             65         60        64           10 #> 4 predicti… eucaly…           9             19          0        11            2 #> # ℹ 1 more variable: sum_glm <dbl>"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_conclusions.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise counts of qualitative conclusions across all datasets — summarise_conclusions","title":"Summarise counts of qualitative conclusions across all datasets — summarise_conclusions","text":"Summarise counts qualitative conclusions across datasets","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_conclusions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise counts of qualitative conclusions across all datasets — summarise_conclusions","text":"","code":"summarise_conclusions(ManyEcoEvo_results, ManyEcoEvo_yi_results, ManyEcoEvo)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_conclusions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise counts of qualitative conclusions across all datasets — summarise_conclusions","text":"ManyEcoEvo_results tibble ManyEcoEvo_results ManyEcoEvo_yi_results tibble ManyEcoEvo_yi_results ManyEcoEvo tibble ManyEcoEvo","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_conclusions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise counts of qualitative conclusions across all datasets — summarise_conclusions","text":"dataframe count values unique Conclusion columns subset (\"effects\", \"predictions\", \"\"), dataset.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_conclusions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise counts of qualitative conclusions across all datasets — summarise_conclusions","text":"Data summary generated summarise_conclusions_data().","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_conclusions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise counts of qualitative conclusions across all datasets — summarise_conclusions","text":"Hannah S. Fraser Elliot Gould","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_conclusions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise counts of qualitative conclusions across all datasets — summarise_conclusions","text":"","code":"summarise_conclusions(ManyEcoEvo_results,ManyEcoEvo_yi_results,ManyEcoEvo) #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `across(...)`. #> Caused by warning: #> ! NAs introduced by coercion #> # A tibble: 6 × 9 #>   subset      dataset    mixed neg_c neg_q none_c none_q pos_c pos_q #>   <chr>       <chr>      <int> <int> <int>  <int>  <int> <int> <int> #> 1 effects     blue tit       4    27    23      3      1     0     0 #> 2 effects     eucalyptus     5     3     5     14      6     1     2 #> 3 predictions blue tit       4    16    16      1      1     0     0 #> 4 predictions eucalyptus     2     0     2      1      2     0     0 #> 5 all         blue tit       5    37    27      4      1     0     0 #> 6 all         eucalyptus     8     6    12     19     12     2     4"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_conclusions_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Count qualitative conclusions across all analyses for each dataset — summarise_conclusions_data","title":"Count qualitative conclusions across all analyses for each dataset — summarise_conclusions_data","text":"Count qualitative conclusions across analyses dataset","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_conclusions_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count qualitative conclusions across all analyses for each dataset — summarise_conclusions_data","text":"","code":"summarise_conclusions_data(data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_conclusions_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count qualitative conclusions across all analyses for each dataset — summarise_conclusions_data","text":"data dataframe containing columns split_id, analysis_id, dataset, Conclusion","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_conclusions_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count qualitative conclusions across all analyses for each dataset — summarise_conclusions_data","text":"dataframe counts n unique value Conclusion dataset","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_conclusions_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Count qualitative conclusions across all analyses for each dataset — summarise_conclusions_data","text":"Hannah S. Fraser Elliot Gould","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_conclusions_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count qualitative conclusions across all analyses for each dataset — summarise_conclusions_data","text":"","code":"ManyEcoEvo$data[[1]] %>% filter(Conclusion != \"CHECK\") %>% summarise_conclusions_data() #> # A tibble: 5 × 3 #>   dataset  Conclusion     n #>   <chr>    <chr>      <int> #> 1 blue tit mixed          5 #> 2 blue tit neg_c         37 #> 3 blue tit neg_q         27 #> 4 blue tit none_c         4 #> 5 blue tit none_q         1"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_model_composition.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Model Composition — summarise_model_composition","title":"Summarise Model Composition — summarise_model_composition","text":"Calculate descriptive statistics (mean, sd, min, max) number fixed effects, number random effects, number interactions sample size models dataset across sample predictions standardized corelation coefficients.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_model_composition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Model Composition — summarise_model_composition","text":"","code":"summarise_model_composition(   ManyEcoEvo_results,   ManyEcoEvo_yi_results,   ManyEcoEvo )"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_model_composition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Model Composition — summarise_model_composition","text":"ManyEcoEvo_results tibble ManyEcoEvo_results ManyEcoEvo_yi_results tibble ManyEcoEvo_yi_results ManyEcoEvo tibble ManyEcoEvo","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_model_composition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Model Composition — summarise_model_composition","text":"dataframe","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_model_composition.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise Model Composition — summarise_model_composition","text":"Generates summary data summarise_model_composition_data().","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_model_composition.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise Model Composition — summarise_model_composition","text":"Hannah S. Fraser Elliot Gould","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_model_composition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise Model Composition — summarise_model_composition","text":"","code":"summarise_model_composition(ManyEcoEvo_results, ManyEcoEvo_yi_results, ManyEcoEvo) #> Adding missing grouping variables: `estimate_type`, `dataset`, `exclusion_set`, #> `publishable_subset`, `expertise_subset` #> Adding missing grouping variables: `estimate_type`, `dataset`, `exclusion_set` #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `across(...)`. #> Caused by warning: #> ! NAs introduced by coercion #> # A tibble: 96 × 5 #>    subset  dataset  variable     fn     value #>    <chr>   <chr>    <chr>        <chr>  <dbl> #>  1 effects blue tit fixed        mean   5.20  #>  2 effects blue tit fixed        sd     2.92  #>  3 effects blue tit fixed        min    1     #>  4 effects blue tit fixed        max   19     #>  5 effects blue tit random       mean   3.53  #>  6 effects blue tit random       sd     2.08  #>  7 effects blue tit random       min    0     #>  8 effects blue tit random       max   10     #>  9 effects blue tit interactions mean   0.435 #> 10 effects blue tit interactions sd     1.11  #> # ℹ 86 more rows"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_model_composition_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise model composition for a single dataframe of out of sample predictions or out or effect sizes — summarise_model_composition_data","title":"Summarise model composition for a single dataframe of out of sample predictions or out or effect sizes — summarise_model_composition_data","text":"Summarise model composition single dataframe sample predictions effect sizes","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_model_composition_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise model composition for a single dataframe of out of sample predictions or out or effect sizes — summarise_model_composition_data","text":"","code":"summarise_model_composition_data(data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_model_composition_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise model composition for a single dataframe of out of sample predictions or out or effect sizes — summarise_model_composition_data","text":"data dataframe variables dataset, num_fixed_effects, num_random_effects, num_interactions, sample_size","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_model_composition_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise model composition for a single dataframe of out of sample predictions or out or effect sizes — summarise_model_composition_data","text":"dataframe tidy format yielding descriptive summary statistics (mean, sd, min max) key variables described data, includes variables subset, dataset, variable, fn, value","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_model_composition_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise model composition for a single dataframe of out of sample predictions or out or effect sizes — summarise_model_composition_data","text":"Hannah S. Fraser Elliot Gould","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_model_composition_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise model composition for a single dataframe of out of sample predictions or out or effect sizes — summarise_model_composition_data","text":"","code":"ManyEcoEvo %>%  ungroup %>%  filter(dataset == \"blue tit\") %>%  select(data) %>%  unnest(data) %>%  summarise_model_composition_data() #> # A tibble: 1 × 17 #>   dataset  fixed_mean fixed_sd fixed_min fixed_max random_mean random_sd #>   <chr>         <dbl>    <dbl>     <dbl>     <dbl>       <dbl>     <dbl> #> 1 blue tit       5.28     3.02         1        19        3.64      2.37 #> # ℹ 10 more variables: random_min <dbl>, random_max <dbl>, #> #   interactions_mean <dbl>, interactions_sd <dbl>, interactions_min <dbl>, #> #   interactions_max <dbl>, n_mean <dbl>, n_sd <dbl>, n_min <dbl>, n_max <dbl>"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_reviews.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Peer-Reviews — summarise_reviews","title":"Summarise Peer-Reviews — summarise_reviews","text":"Calculates summary statistics (mean, sd, min, max) number analyses peer-reviewed reviewer, number reviews received analysis.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_reviews.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Peer-Reviews — summarise_reviews","text":"","code":"summarise_reviews(ManyEcoEvo, ManyEcoEvo_results, ManyEcoEvo_yi_results)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_reviews.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Peer-Reviews — summarise_reviews","text":"ManyEcoEvo tibble ManyEcoEvo ManyEcoEvo_results tibble ManyEcoEvo_results ManyEcoEvo_yi_results tibble ManyEcoEvo_yi_results","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_reviews.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Peer-Reviews — summarise_reviews","text":"named list length two summarised_data_analyses containing tibble summary statistics outcome subset (effects predictions) generated summarise_analyses_by_reviewer(), summarised_data_reviews containing tibble sumary statistics outcome subset, dataset generated summarise_reviews_per_analysis().","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_reviews.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise Peer-Reviews — summarise_reviews","text":"Hannah S. Fraser Elliot Gould","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_reviews.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise Peer-Reviews — summarise_reviews","text":"","code":"summarise_reviews(ManyEcoEvo, ManyEcoEvo_results,ManyEcoEvo_yi_results) #> Adding missing grouping variables: `estimate_type`, `dataset`, `exclusion_set`, #> `publishable_subset`, `expertise_subset` #> Adding missing grouping variables: `estimate_type`, `dataset`, `exclusion_set` #> $summarised_data_analyses #> # A tibble: 2 × 5 #>   subset       mean    sd   min   max #>   <chr>       <dbl> <dbl> <int> <int> #> 1 effects      3.30  1.68     1    11 #> 2 predictions  2.27  1.18     1     6 #>  #> $summarised_data_reviews #> # A tibble: 4 × 6 #>   subset      dataset     mean    sd   min   max #>   <chr>       <chr>      <dbl> <dbl> <int> <int> #> 1 effects     blue tit    3.87 0.707     3     5 #> 2 effects     eucalyptus  4.24 0.790     3     6 #> 3 predictions blue tit    3.86 0.734     3     5 #> 4 predictions eucalyptus  4.6  0.966     3     6 #>"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_reviews_per_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise reviews per each analysis — summarise_reviews_per_analysis","title":"Summarise reviews per each analysis — summarise_reviews_per_analysis","text":"Summarise reviews per analysis","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_reviews_per_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise reviews per each analysis — summarise_reviews_per_analysis","text":"","code":"summarise_reviews_per_analysis(review_data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_reviews_per_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise reviews per each analysis — summarise_reviews_per_analysis","text":"review_data dataframe containing variables dataset, response_id, ReviewerId.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_reviews_per_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise reviews per each analysis — summarise_reviews_per_analysis","text":"dataframe variables dataset, mean, sd, min, max number times analysis reviewed","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_reviews_per_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise reviews per each analysis — summarise_reviews_per_analysis","text":"","code":"ManyEcoEvo %>% ungroup %>% select(data, -dataset) %>% unnest(data) %>% select(ends_with(\"_id\"), id_col, dataset, review_data) %>% unnest(review_data) %>% summarise_reviews_per_analysis() #> # A tibble: 2 × 5 #>   dataset     mean    sd   min   max #>   <chr>      <dbl> <dbl> <int> <int> #> 1 blue tit    3.86 0.773     2     6 #> 2 eucalyptus  4.03 0.880     2     6"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_sorensen_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Mean Sorensen's Index Estimates — summarise_sorensen_index","title":"Summarise Mean Sorensen's Index Estimates — summarise_sorensen_index","text":"Summarise Mean Sorensen's Index Estimates","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_sorensen_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Mean Sorensen's Index Estimates — summarise_sorensen_index","text":"","code":"summarise_sorensen_index(ManyEcoEvo_results, ManyEcoEvo_yi_results)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_sorensen_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Mean Sorensen's Index Estimates — summarise_sorensen_index","text":"ManyEcoEvo_results tibble ManyEcoEvo_results ManyEcoEvo_yi_results tibble ManyEcoEvo_yi_results","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_sorensen_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Mean Sorensen's Index Estimates — summarise_sorensen_index","text":"tibble aggregate summary statistics (mean, sd, min, max) mean Sorensen's index estimates across subset dataset.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_sorensen_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise Mean Sorensen's Index Estimates — summarise_sorensen_index","text":"Generates data summary summarise_sorensen_index_data().","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_sorensen_index.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise Mean Sorensen's Index Estimates — summarise_sorensen_index","text":"Hannah S. Fraser Elliot Gould","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_sorensen_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise Mean Sorensen's Index Estimates — summarise_sorensen_index","text":"","code":"summarise_sorensen_index(ManyEcoEvo_results,ManyEcoEvo_yi_results) #> Adding missing grouping variables: `estimate_type`, `dataset`, `exclusion_set`, #> `publishable_subset`, `expertise_subset` #> Adding missing grouping variables: `estimate_type`, `dataset`, `exclusion_set` #> # A tibble: 4 × 6 #>   subset      dataset     mean     sd   min   max #>   <chr>       <chr>      <dbl>  <dbl> <dbl> <dbl> #> 1 predictions blue tit   0.569 0.0733 0.429 0.743 #> 2 predictions eucalyptus 0.665 0.0752 0.529 0.784 #> 3 effects     blue tit   0.595 0.0958 0.434 0.859 #> 4 effects     eucalyptus 0.690 0.0839 0.548 0.982"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_sorensen_index_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Sorensen's Mean Index Estimates for a dataframe — summarise_sorensen_index_data","title":"Summarise Sorensen's Mean Index Estimates for a dataframe — summarise_sorensen_index_data","text":"Summarises Sorensen's index estimates single dataframe estimates","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_sorensen_index_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Sorensen's Mean Index Estimates for a dataframe — summarise_sorensen_index_data","text":"","code":"summarise_sorensen_index_data(data)"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_sorensen_index_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Sorensen's Mean Index Estimates for a dataframe — summarise_sorensen_index_data","text":"data dataframe containing mean_diversity_index Sorensen's index estimates analysis id_col, dataset.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_sorensen_index_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Sorensen's Mean Index Estimates for a dataframe — summarise_sorensen_index_data","text":"dataframe mean, sd, min, max mean Sorensen's index values dataset.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_sorensen_index_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise Sorensen's Mean Index Estimates for a dataframe — summarise_sorensen_index_data","text":"","code":"ManyEcoEvo_results %>% filter(exclusion_set == \"complete\",       publishable_subset == \"All\",       expertise_subset == \"All\") %>%  ungroup %>%  select(dataset, diversity_indices) %>%  unnest(diversity_indices) %>%   summarise_sorensen_index_data() #> # A tibble: 2 × 5 #>   dataset     mean     sd   min   max #>   <chr>      <dbl>  <dbl> <dbl> <dbl> #> 1 blue tit   0.595 0.0958 0.434 0.859 #> 2 eucalyptus 0.690 0.0839 0.548 0.982"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_variable_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise variable usage across analyses — summarise_variable_counts","title":"Summarise variable usage across analyses — summarise_variable_counts","text":"Using count_analyses_variables_used() calculates counts analyses variable used given dataset. summarisation counts ( mean, sd, min max) optional, see details.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_variable_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise variable usage across analyses — summarise_variable_counts","text":"","code":"summarise_variable_counts(   ManyEcoEvo,   ManyEcoEvo_results,   ManyEcoEvo_yi_results,   output = \"count\" )"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_variable_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise variable usage across analyses — summarise_variable_counts","text":"ManyEcoEvo tibble ManyEcoEvo ManyEcoEvo_results tibble ManyEcoEvo_results ManyEcoEvo_yi_results tibble ManyEcoEvo_yi_results output length 1 character vector equal \"count\" \"aggregate\"","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_variable_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise variable usage across analyses — summarise_variable_counts","text":"dataframe count values n summary statistic values n_mean,n_sd,n_min,n_max counts depending value supplied output argument.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_variable_counts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise variable usage across analyses — summarise_variable_counts","text":"calculate count values, supply \"count\" argument output. calculate summary statistics counts, supply \"aggregate\" argument output instead.","code":""},{"path":[]},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_variable_counts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise variable usage across analyses — summarise_variable_counts","text":"Hannah S. Fraser Elliot Gould","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/summarise_variable_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise variable usage across analyses — summarise_variable_counts","text":"","code":"summarise_variable_counts(ManyEcoEvo, ManyEcoEvo_results, ManyEcoEvo_yi_results, \"count\") #> Adding missing grouping variables: `estimate_type`, `dataset`, `exclusion_set`, #> `publishable_subset`, `expertise_subset` #> Adding missing grouping variables: `estimate_type`, `dataset`, `exclusion_set` #> # A tibble: 666 × 4 #>    subset  dataset  variable                        n #>    <chr>   <chr>    <chr>                       <dbl> #>  1 effects blue tit hatch_year                    101 #>  2 effects blue tit hatch_nest_breed_ID            67 #>  3 effects blue tit hatch_Area                     25 #>  4 effects blue tit hatch_Box                       6 #>  5 effects blue tit hatch_mom_Ring                 36 #>  6 effects blue tit hatch_nest_dad_Ring             4 #>  7 effects blue tit Extra-pair_paternity            6 #>  8 effects blue tit Extra-pair_dad_ring             0 #>  9 effects blue tit genetic_dad_ring_(WP_or_EP)    19 #> 10 effects blue tit hatch_nest_LD                  24 #> # ℹ 656 more rows  summarise_variable_counts(ManyEcoEvo, ManyEcoEvo_results, ManyEcoEvo_yi_results, \"aggregate\") #> Adding missing grouping variables: `estimate_type`, `dataset`, `exclusion_set`, #> `publishable_subset`, `expertise_subset` #> Adding missing grouping variables: `estimate_type`, `dataset`, `exclusion_set` #> # A tibble: 6 × 6 #> # Groups:   dataset [2] #>   dataset    subset      n_mean  n_sd n_min n_max #>   <chr>      <chr>        <dbl> <dbl> <dbl> <dbl> #> 1 blue tit   all         12.2   25.8      0   120 #> 2 blue tit   effects      9.64  21.1      0   101 #> 3 blue tit   predictions  5.09  11.0      0    53 #> 4 eucalyptus all          8.88  16.2      0    77 #> 5 eucalyptus effects      4.74   9.98     0    55 #> 6 eucalyptus predictions  0.955  2.30     0    12"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/validate_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate predictions conditioned on dataset — validate_predictions","title":"Validate predictions conditioned on dataset — validate_predictions","text":"Validate predictions conditioned dataset","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/validate_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate predictions conditioned on dataset — validate_predictions","text":"","code":"validate_predictions(data_set, input, type = \"filepath\")"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/validate_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate predictions conditioned on dataset — validate_predictions","text":"data_set dataset analysed, either \"blue tit\" \"eucalyptus\" input tibble sample predictions augmented, .e. checked updated type character string length 1, equal either \"filepath\" \"df\". Defaults \"filepath\"","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/validate_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate predictions conditioned on dataset — validate_predictions","text":"object class \"pointblank_agent\", yet interrogated.","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/validate_predictions_df_blue_tit.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate out of sample predictions for blue tit dataset with pointblank package — validate_predictions_df_blue_tit","title":"Validate out of sample predictions for blue tit dataset with pointblank package — validate_predictions_df_blue_tit","text":"Validate sample predictions blue tit dataset pointblank package","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/validate_predictions_df_blue_tit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate out of sample predictions for blue tit dataset with pointblank package — validate_predictions_df_blue_tit","text":"","code":"validate_predictions_df_blue_tit(input, type = \"filepath\")"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/validate_predictions_df_blue_tit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate out of sample predictions for blue tit dataset with pointblank package — validate_predictions_df_blue_tit","text":"input Either filepath dataframe, corresponding type argument specification type character string length 1, equal either \"filepath\" \"df\". Defaults \"filepath\"","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/validate_predictions_df_blue_tit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate out of sample predictions for blue tit dataset with pointblank package — validate_predictions_df_blue_tit","text":"pointblank agent, class \"ptblank_agent\", yet interrogated","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/validate_predictions_df_euc.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate out of sample predictions for eucalytpus dataset with pointblank package — validate_predictions_df_euc","title":"Validate out of sample predictions for eucalytpus dataset with pointblank package — validate_predictions_df_euc","text":"Validate sample predictions eucalytpus dataset pointblank package","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/validate_predictions_df_euc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate out of sample predictions for eucalytpus dataset with pointblank package — validate_predictions_df_euc","text":"","code":"validate_predictions_df_euc(input, type = \"filepath\")"},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/validate_predictions_df_euc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate out of sample predictions for eucalytpus dataset with pointblank package — validate_predictions_df_euc","text":"input Either filepath dataframe, corresponding type argument specification type character string length 1, equal either \"filepath\" \"df\". Defaults \"filepath\"","code":""},{"path":"https://egouldo.github.io/ManyEcoEvo/reference/validate_predictions_df_euc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate out of sample predictions for eucalytpus dataset with pointblank package — validate_predictions_df_euc","text":"pointblank agent, class \"ptblank_agent\", yet interrogated","code":""}]
